<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_empty</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=1 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw health bar
var col_hp_bar=$1b1db3;
hp_percent=(global.player_health_current/global.player_health)*100;

draw_healthbar(TLX,TLY,BRX,BRY,hp_percent,c_black,col_hp_bar,col_hp_bar,0,false,false);

var txt_col=$f4f4f4;

//write health
var rounded_current_hp= (round(global.player_health_current));
draw_set_font(font0);
draw_set_colour(txt_col);
draw_set_halign(fa_right);
draw_set_valign(fa_top);
draw_text((BRX-TLX)/2+TLX-13,(BRY-TLY)/2+TLY-29,(rounded_current_hp));
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text((BRX-TLX)/2+TLX,(BRY-TLY)/2+TLY-29,("/" ));
draw_text((BRX-TLX)/2+TLX+56,(BRY-TLY)/2+TLY-29,( global.player_health));

//draw AP bar
var col_ap_bar=$8f1e14;
AP_percent=(global.player_AP_current/global.player_AP)*100;
draw_healthbar(TLX,ATLY,BRX,ABRY,AP_percent,c_black,col_ap_bar,col_ap_bar,0,false,false);

//write AP
var rounded_current_AP= (round(global.player_AP_current));
draw_set_font(font0);
draw_set_colour(txt_col);
draw_set_halign(fa_right);
draw_set_valign(fa_top);
draw_text((BRX-TLX)/2+TLX-13,(ABRY-ATLY)/2+ATLY-29,(rounded_current_AP));
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text((BRX-TLX)/2+TLX,(ABRY-ATLY)/2+ATLY-29,("/" ));
draw_text((BRX-TLX)/2+TLX+40,(ABRY-ATLY)/2+ATLY-29,( global.player_AP));

//draw potion bar
var col_potion=$1b1db3
potion_percent=(global.player_potion_current/global.player_potion)*100
draw_healthbar(PTLX,PTLY,PBRX,PBRY,potion_percent,c_black,col_potion,col_potion,3,false,false);
//write potion amount
var rounded_current_potion= (round(global.player_potion_current))
draw_set_font(font0);
draw_set_colour(txt_col);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text((PBRX-PTLX)/2+PTLX+3,(PBRY-PTLY)/2+PTLY-29,(rounded_current_potion));

//write attack amouts
if instance_exists(obj_overlay_test)
{
if obj_overlay_test.attcount&gt;0&amp;&amp;obj_overlay_test.attcount&lt;1
{
    if obj_overlay_test.vlock=0
    {
        var draw_hattack_amount=((1-obj_overlay_test.attcount)/obj_weapon.hattcount);
        if draw_hattack_amount&lt;1.1 draw_hattack_amount=1;
        if draw_hattack_amount&gt;1.95 draw_hattack_amount=2;
        draw_set_font(font0);
        draw_set_colour(txt_col);
        draw_set_halign(fa_center);
        draw_set_valign(fa_top);
        //draw 1
        draw_text((315-20),1613,("X"+ string (draw_hattack_amount)));
        draw_text((420+30),1613,("X"+ string (draw_hattack_amount)));
        //draw 2
        draw_text((420+192+30),1613,("X"+ string (draw_hattack_amount)));
        //draw 3
        draw_text((405+385+20),1613,("X"+ string (draw_hattack_amount)));
        
    }
    
    if obj_overlay_test.hlock=0
    {
        var draw_vattack_amount=((1-obj_overlay_test.attcount)/obj_weapon.vattcount);
        if draw_vattack_amount&lt;1.1 draw_vattack_amount=1;
        if draw_vattack_amount&gt;1.95 draw_vattack_amount=2;
        draw_set_font(font0);
        draw_set_colour(txt_col);
        draw_set_halign(fa_center);
        draw_set_valign(fa_top);
        //draw 1
        draw_text((356),1580-40,("X"+ string (draw_vattack_amount)));
        //draw 2
        draw_text((356+192),1580-40,("X"+ string (draw_vattack_amount)));
        //draw 3
        draw_text((356+385),1580-40,("X"+ string (draw_vattack_amount)));

    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
