<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy=0;
if(global.boss=0)
{
    if room=startup||room=room1
    {
            if room=room1
            {
            bass=audio_play_sound(snd_title,0,true);
            low_hp=audio_play_sound(snd_title,0,true);
            very_low_hp=audio_play_sound(snd_title,0,true);
            dramatic=audio_play_sound(snd_title,15,true);
            vol1=0.65;
            vol2=0.65;
            vol3=0.65;
            vol4=0.65;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
        }
        if room=startup
            {
            bass=audio_play_sound(snd_main_menu,0,true);
            low_hp=audio_play_sound(snd_main_menu,0,true);
            very_low_hp=audio_play_sound(snd_main_menu,0,true);
            dramatic=audio_play_sound(snd_main_menu,15,true);
            vol1=0.65;
            vol2=0.65;
            vol3=0.65;
            vol4=0.65;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
        }
    }
    else
    {
        music_choice=(irandom_range(1,7))
        
        //odfm1
        if (music_choice=1)
        {
            bass=audio_play_sound(snd_odfm_bass_and_drum,0,true);
            low_hp=audio_play_sound(snd_odfm_super_dramatic,0,true);
            very_low_hp=audio_play_sound(snd_odfm_mid,0,true);
            dramatic=audio_play_sound(snd_odfm_dramatic,0,true);
            vol1=0.45;
            vol2=0.35;
            vol3=0.35;
            vol4=0.3;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            base_time=0;
            current_track=bass;
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
        
        //odfm2
        if (music_choice=2)
        {
            bass=audio_play_sound(snd_odfm2_mid,0,true);
            low_hp=audio_play_sound(snd_odfm2_low_hp,0,true);
            very_low_hp=audio_play_sound(snd_odfm2_very_low_hp,0,true);
            dramatic=audio_play_sound(snd_odfm2_dramatic,15,true);
            vol1=0.6;
            vol2=0.55;
            vol3=0.55;
            vol4=0.55;
            audio_sound_gain(bass,global.vol_music*0.6,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
        
        //odfm3
        if (music_choice=3)
        {
            bass=audio_play_sound(snd_odfm3_mid,0,true);
            low_hp=audio_play_sound(snd_odfm3_low_health,0,true);
            very_low_hp=audio_play_sound(snd_odfm3_very_low_health,0,true);
            dramatic=audio_play_sound(snd_odfm3_dramatic,15,true);
            vol1=0.7;
            vol2=0.65;
            vol3=0.65;
            vol4=0.65;
            audio_sound_gain(bass,global.vol_music*0.7,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6)
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);;
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
            
            
        }
        //odfm4
        if (music_choice=4)
        {
            bass=audio_play_sound(snd_odfm4_mid,0,true);
            low_hp=audio_play_sound(snd_odfm4_low_health,0,true);
            very_low_hp=audio_play_sound(snd_odfm4_very_low_health,0,true);
            dramatic=audio_play_sound(snd_odfm4_dramatic,15,true);
            vol1=0.65;
            vol2=0.6;
            vol3=0.6;
            vol4=0.6;
            audio_sound_gain(bass,global.vol_music*0.65,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
        //odfm5
        if (music_choice=5)
        {
            bass=audio_play_sound(snd_odfm5_mid,0,true);
            low_hp=audio_play_sound(snd_odfm5_low_health,0,true);
            very_low_hp=audio_play_sound(snd_odfm5_very_low_health,0,true);
            dramatic=audio_play_sound(snd_odfm5_dramatic,15,true);
            vol1=0.5;
            vol2=0.45;
            vol3=0.45;
            vol4=0.45;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
        
        //odfm6
        if (music_choice=6)
        {
            bass=audio_play_sound(snd_odfm6_mid,0,true);
            low_hp=audio_play_sound(snd_odfm6_low_health,0,true);
            very_low_hp=audio_play_sound(snd_odfm6_very_low_health,0,true);
            dramatic=audio_play_sound(snd_odfm6_dramatic,15,true);
            vol1=0.5;
            vol2=0.5;
            vol3=0.5;
            vol4=0.5;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
        //odfm7
        if (music_choice=7)
        {
            bass=audio_play_sound(snd_odfm7_mid,0,true);
            low_hp=audio_play_sound(snd_odfm7_low_health,0,true);
            very_low_hp=audio_play_sound(snd_odfm7_very_low_health,0,true);
            dramatic=audio_play_sound(snd_odfm7_dramatic,15,true);
            vol1=0.5;
            vol2=0.5;
            vol3=0.5;
            vol4=0.5;
            audio_sound_gain(bass,global.vol_music*0.45,0);
            audio_sound_gain(low_hp,0,0);
            audio_sound_gain(very_low_hp,0,0);
            audio_sound_gain(dramatic,0,0);
            audio_pause_sound(low_hp);
            audio_pause_sound(very_low_hp);
            audio_pause_sound(dramatic);
            current_track=bass;
            if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
            if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
            if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
            if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
            if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
            if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
            if (audio_group_is_loaded(boss_music_1))audio_group_unload(boss_music_1);
            if (audio_group_is_loaded(title_and_menu))audio_group_unload(title_and_menu);
        }
    }
}
if(global.boss&gt;0)
{
    bass=audio_play_sound(snd_boss_music_1_mid,0,true);
    low_hp=audio_play_sound(snd_boss_music_1_low_health,0,true);
    very_low_hp=audio_play_sound(snd_boss_music_1_very_low_health,0,true);
    dramatic=audio_play_sound(snd_boss_music_1_dramatic,15,true);
    vol1=0.7;
    vol2=0.65;
    vol3=0.65;
    vol4=0.65;
    audio_sound_gain(bass,global.vol_music*0.7,0);
    audio_sound_gain(low_hp,0,0);
    audio_sound_gain(very_low_hp,0,0);
    audio_sound_gain(dramatic,0,0);
    audio_pause_sound(low_hp);
    audio_pause_sound(very_low_hp);
    audio_pause_sound(dramatic);
    current_track=bass;
    if (audio_group_is_loaded(odfm1))audio_group_unload(odfm1);
    if (audio_group_is_loaded(odfm2))audio_group_unload(odfm2);
    if (audio_group_is_loaded(odfm3))audio_group_unload(odfm3);
    if (audio_group_is_loaded(odfm4))audio_group_unload(odfm4);
    if (audio_group_is_loaded(odfm5))audio_group_unload(odfm5);
    if (audio_group_is_loaded(odfm6))audio_group_unload(odfm6);
    if (audio_group_is_loaded(odfm7))audio_group_unload(odfm7);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(bass,0,0);
    audio_sound_gain(low_hp,0,0);
    audio_sound_gain(very_low_hp,0,0);
    audio_sound_gain(dramatic,0,0);
    audio_stop_sound(bass);
    audio_stop_sound(low_hp);
    audio_stop_sound(very_low_hp);
    audio_stop_sound(dramatic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///odfm1-3
if destroy=1 instance_destroy();
//check bass track_ position
base_time=audio_sound_get_track_position(current_track);

// bring in hp sounds
if ((global.player_health_current/global.player_health)&gt;0.667)&amp;&amp;(audio_is_paused(bass))
{
    scr_music_track_transition(very_low_hp,0,bass,global.vol_music*vol1)
}


if ((global.player_health_current/global.player_health)&lt;0.667) &amp;&amp; ((global.player_health_current/global.player_health)&gt;0.334) &amp;&amp; (audio_is_paused(very_low_hp))
{
    if(audio_is_playing(bass))
    {
        scr_music_track_transition(bass,0,very_low_hp,global.vol_music*vol2)
    }
    if(audio_is_playing(low_hp))
    {
        scr_music_track_transition(low_hp,0,very_low_hp,global.vol_music*vol2)
    }
}



if ((global.player_health_current/global.player_health)&lt;0.334)&amp;&amp;(audio_is_paused(low_hp))
{
   scr_music_track_transition(very_low_hp,0,low_hp,global.vol_music*vol3) 
}
//bring in dramatic if you are slow
if ((global.dramatic=1)&amp;&amp;(audio_is_paused(dramatic)))
{
    audio_sound_set_track_position(dramatic,base_time);
    audio_sound_gain(dramatic,global.vol_music*vol4,0);
    audio_resume_sound(dramatic);
}
if ((global.dramatic=0)&amp;&amp;(audio_is_playing(dramatic)))
{
    audio_sound_gain(dramatic,0,0);
    audio_pause_sound(dramatic);
}

//dynamic volume
if audio_sound_get_gain(bass)&gt;0 audio_sound_gain(bass,global.vol_music*vol1,0);
if audio_sound_get_gain(low_hp)&gt;0 audio_sound_gain(low_hp,global.vol_music*vol3,0);
if audio_sound_get_gain(very_low_hp)&gt;0 audio_sound_gain(very_low_hp,global.vol_music*vol2,0);
if audio_sound_get_gain(dramatic)&gt;0 audio_sound_gain(dramatic,global.vol_music*vol4,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.dramatic=0) global.dramatic=1;
else global.dramatic=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
