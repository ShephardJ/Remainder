<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_airship_cannon_out</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=13;
image_yscale=image_xscale;
image_speed=0;
turn=0;
state=1;
current_state=1;
animation_start=1;
zapped=0;
times_shot=0;
varient=0;

//attack_vars
attack_bank=irandom_range(0,2);
attacking=0;
winding_down=0;
esthetic_wait=3;
moved_back=0;
scr_airship_cannon_stats(0);
state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth-=1;

hit=0;
hp_lost=0;
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;

zapping=0;
zapped=0;
times_shot_gate=7;

destroy=0;

shot_out=0;


cannon_shot=snd_cannonshot;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.destroy=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn
if turn=1&amp;&amp;zapped=0
{
    
    //shoot
    if (times_shot&lt;(times_shot_gate-(obj_airship.cannon_total)))&amp;&amp;(state=3||state=4)
    {
        //set shot rate based on n cannons
        if obj_airship.cannon_total&gt;0
        {
            wind_up=3-(2-(obj_airship.cannon_total-1));
        }
        else wind_up=1
        //check wind up time isnt smaller than the banked attack
        if (wind_up&lt;attack_bank) attack_bank=wind_up-1;
        acting=1;
        attacking=1;
        //wait for wind up
        if(attack_bank&lt;wind_up)
        {
            shot_out=0
            attack_bank+=1;
            state_visual.winding_up=1;
            state_visual.anim_speed=(attack_bank/wind_up);
            state_visual.start_up=1;
            state_visual.mouvement=0;
        }
        //attack
        if(attack_bank=wind_up)&amp;&amp;(winding_down=0)
        {
            var ball=instance_create(x,y,obj_airship_cannon_ball);
            instance_create(x,y,obj_airship_cannon_smoke);
            state_visual.winding_up=0;
            ball.move_to_y=512;
            times_shot+=1;
            cannon_shot=audio_play_sound(snd_cannonshot,6,false);
            audio_sound_gain(cannon_shot,global.vol_fx*0.4,0);
            audio_sound_pitch(cannon_shot,1+(random_range(-0.5,-0.05)))
        }
        //wait for wind down
        if(attack_bank=wind_up)&amp;&amp;(winding_down&lt;wind_down)
        {
            winding_down+=1;
            state_visual.winding_down=1;
            state_visual.anim_speed=(winding_down/wind_down);
            state_visual.start_up=1;
        }
        //return to normal
        if(attack_bank=wind_up)&amp;&amp;(winding_down=wind_down)
        {
            attacking=0;
            winding_down=0;
            attack_bank=0;
            state_visual.winding_down=0;
            state_visual.anim_speed=0;
        }
        
        
    }
    if state=5
    {
        acting=1;
        attacking=1;
        //wait for wind up
        if(attack_bank&lt;wind_up)
        {
            attack_bank+=1;
            state_visual.winding_up=1;
            state_visual.anim_speed=(attack_bank/wind_up);
            state_visual.start_up=1;
            state_visual.mouvement=0;
        }
        //attack
        if(attack_bank=wind_up)&amp;&amp;(winding_down=0)
        {
            zap=instance_create(x+78,512+(13*13/2),obj_airship_cannon_zap);
            zap.zap_count=1;
            zap.zap_check_gate=1;
            instance_create(0,0,obj_flash);
            state_visual.winding_up=0;
            times_shot+=1;
            zapping=1;
            zap_shot=audio_play_sound(snd_lightning,6,false);
            audio_sound_gain(zap_shot,global.vol_fx*0.75,0);
            audio_sound_pitch(zap_shot,1+(random_range(-0.15,0)))
        }
        //wait for wind down
        if(attack_bank=wind_up)&amp;&amp;(winding_down&lt;wind_down)
        {
            winding_down+=1;
            state_visual.winding_down=1;
            state_visual.anim_speed=(winding_down/wind_down);
            state_visual.start_up=1;
        }
        //return to normal
        if(attack_bank=wind_up)&amp;&amp;(winding_down=wind_down)
        {
            attacking=0;
            winding_down=0;
            attack_bank=0;
            state_visual.winding_down=0;
            state_visual.anim_speed=0;
        }
        
        
    }
    
    if (times_shot=times_shot_gate-(obj_airship.cannon_total))
    
    {
        if state=4 
        {
            state=5;
            varient=1;
            scr_airship_cannon_stats(1);
        }
        else
        {
            if state&gt;0 shot_out+=1;
        }
        
    }
    if state=0 {acted=1;turn=0;}  
    acted=1;turn=0;  
}

if (zapping=1)&amp;&amp;!(instance_exists(obj_airship_cannon_ball)) {zapped=1;zapping=0;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate
if !(current_state=state)
{
    //cannon out
    if (current_state=1)&amp;&amp;(state=3)scr_airship_cannon_out();
    if (current_state=1)&amp;&amp;(state=4)scr_airship_cannon_out();
    
    //cannon in
    if (current_state=3)&amp;&amp;(state=1)scr_airship_cannon_in();
    if (current_state=4)&amp;&amp;(state=1)scr_airship_cannon_in();
    
    //switched to zapper
    if (current_state=4)&amp;&amp;(state=5)scr_airship_cannon_to_zapper();
    
    //switched to zapper
    if (current_state=5)&amp;&amp;(state=1)scr_airship_cannon_zapper_in();
    //destroy
    if state=0
    {
        if current_state=3 scr_airship_cannon_destroyed_3();
        if current_state=4 scr_airship_cannon_destroyed_4();
        if current_state=5 scr_airship_cannon_destroyed_5();
    }
}
if current_state=0
{
    state_visual.winding_down=0;
    state_visual.anim_speed=0;
    state_visual.winding_up=0;
    zapping=0;
    zapped=0;
    acting=0;
    acted=1;
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///visual
state_visual.x=x;
state_visual.y=y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit_cannon
if hit=1
{
    if damage_taken_1&gt;0||damage_taken_2&gt;0
    {
        d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
        scr_show_damage(d_taken,damage_taken_type_1);
        damage_taken_1=0;
        damage_taken_2=0;
        cannon_hit_sound=audio_play_sound(snd_cannon_hit,6,false);
        audio_sound_gain(cannon_hit_sound,global.vol_fx*0.4,0);
        audio_sound_pitch(cannon_hit_sound,1+(random_range(-0.10,-0.05)))
    }
    if hp_lost&gt;0
    {
        hp-=hp_lost;
        scr_show_damage(hp_lost,0);
        hp_lost=0;
    }
    hit=0;
}

if hp&lt;=0
{
    state=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=1 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shortcut 
hp=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
