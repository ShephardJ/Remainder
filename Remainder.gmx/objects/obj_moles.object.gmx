<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth+=1;

shield=-1;

att_fx=0;
//setting initial y position
do
{
    offset=irandom(2);
    y=271+240*offset;
}
until(!place_meeting(x,y,all))
//setting varient
start_up=1;

//reposition variable
range_check=1;
initial_range_array=0;
current_range_array=0;

//taking damage var
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;
waiting=0;
pushed=0;
image_speed=1/25;

//turn vars
mouvement_banked=0;
moved=0;
attack_bank=0;
attacking=0;
winding_down=0;
esthetic_wait=0;
moved_back=0;


shield_slash_resistence=0.25;
shield_pierce_resistence=0.25;
shield_fire_resistance=0.5;
shield_ice_resistance=0.5;
shield_poison_resistance=1;
shield_push_resistance=0.25;

mole_start_up=1;
mole_x=0;
mole_y=0;
mole_current_range_array=0;
moved_4=0;
moving4=0;
turn_gate=0;

current_player_wait_wait_array=-5;

alive=1;
infected=0;

audio_hit_player=snd_mole_hit_player;
if (!audio_group_is_loaded(mole_audio))audio_group_load(mole_audio);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.destroy=1;
obj_overlay_test.range_array[current_range_array]=0;
if shield&gt;-1 shield.destroy=1;
if !current_player_wait_wait_array=-5 obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
current_player_wait_wait_array=-5
anim=instance_create(x,y,obj_moles_death);
if (varient=0) anim.sprite_index=spr_moles_death;
if (varient=1) anim.sprite_index=spr_moles_infected_death;

if room=fight_room
{
    var adjust=1
    if global.info_array[global.current_world,10]="DRY SEASON"||global.info_array[global.current_world,11]="DRY SEASON" adjust+=1/6;
    if global.info_array[global.current_world,10]="WET SEASON"||global.info_array[global.current_world,11]="WET SEASON" adjust-=1/6;
    if global.info_array[global.current_world,10]="EQUALITY"||global.info_array[global.current_world,11]="EQUALITY" adjust+=1/6;
    if global.info_array[global.current_world,10]="INEQUALITY"||global.info_array[global.current_world,11]="INEQUALITY" adjust-=1/6;
    if varient=0 global.gold+=round(10*((8-global.difficult)/8)*adjust);
    if varient=1 global.gold+=round(12*((8-global.difficult)/8)*adjust);
    
    if varient=0 global.gold_accumulated+=round(10*((8-global.difficult)/8)*adjust);
    if varient=1 global.gold_accumulated+=round(12*((8-global.difficult)/8)*adjust);
}
if room=arcade_mode
{
    if varient=0 global.gold_accumulated+=round(10*((8-global.difficult)/8));
    if varient=1 global.gold_accumulated+=round(12*((8-global.difficult)/8));
    
    if varient=0 global.gold+=round(10*((8-global.difficult)/8));
    if varient=1 global.gold+=round(12*((8-global.difficult)/8));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars 
if(start_up=1)
{
    //mole
    if (varient =0)
    {
        init_hp=20;
        hp=20;
        damage_type_1=0;
        damage_1=4;
        damage_type_2=0;
        damage_2=0;
        wind_up=4;
        range=4;
        wind_down=2;
        mouvement_speed=1;
        slash_resistence=0.75;
        pierce_resistence=0.75;
        fire_resistance=1.25;
        ice_resistance=1.25;
        poison_resistance=1;
        push_resistance=1.25;
        sprite_index=spr_moles;
        attack_type=0;
        alive=1;
        infected=0;
    }
    //mole infected
    if (varient =1)
    {
        init_hp=20;
        hp=20;
        damage_type_1=0;
        damage_1=8;
        damage_type_2=0;
        damage_2=0;
        wind_up=2;
        range=1;
        wind_down=2;
        mouvement_speed=1;
        slash_resistence=0.5;
        pierce_resistence=0.5;
        fire_resistance=1.5;
        ice_resistance=1.5;
        poison_resistance=0;
        push_resistance=0.5;
        sprite_index=spr_moles_infected;
        attack_type=0;
        alive=0;
        infected=1;
    }
    start_up=0;image_xscale=13;
    image_yscale=image_xscale;
}


//keep variables going
hp=hp;
wind_up=wind_up;
range=range;
wind_down=wind_down;
mouvement_speed=mouvement_speed;
slash_resistence=slash_resistence;
pierce_resistence=pierce_resistence;
current_range_array=current_range_array;




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///range_check
if(range_check=1)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition&gt;0)
{
    do
    {
        offset=irandom(global.spawn_cap);
        y=271+240*offset;
    }
    until(!place_meeting(x,y,all))
    current_range_array=scr_range_check(x,y,range);
    initial_range_array=current_range_array;
    range_check=0;
    global.wait_for_reposition-=1;
}

if(range_check=0)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition=0)&amp;&amp;((sprite_index=spr_moles)||(sprite_index=spr_moles_dig_out)||(sprite_index=spr_moles_infected))
{
    current_range_array=round(scr_range_check(x,y,range));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(global.attack_fx&gt;0)&amp;&amp;(waiting=0)||(pushed=1)
{
    att_fx=global.attack_fx;
    if (winding_down=0)&amp;&amp;(varient=0)d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,shield_pierce_resistence,shield_slash_resistence,shield_fire_resistance,shield_ice_resistance,shield_poison_resistance,shield_push_resistance);
    else d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    //infection
    if (varient=1)scr_zombie_infection();
    //damage reset
    damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;
    waiting=1;
    hit=0;
    soldier_hit_sound=audio_play_sound(snd_mole_hit,5,false);
    audio_sound_gain(soldier_hit_sound,global.vol_fx*0.65,0);
}

//can be hit again if no attack fx on screen
if (global.attack_fx&lt;att_fx) {waiting=0;hit=0}

//destroy if hp&lt;0
if (hp&lt;=0) 

{
    audio_sound_gain(soldier_hit_sound,0,0);
    soldier_dead_sound=audio_play_sound(snd_mole_death,5,false);
    audio_sound_gain(soldier_dead_sound,global.vol_fx*0.65,0);
    instance_destroy();
}
    


if (sprite_index=spr_moles)||(sprite_index=spr_moles_infected)image_speed=((1/25)*(hp/init_hp));
if ((sprite_index=spr_moles_dig_in)||sprite_index=spr_moles_dig_out)&amp;&amp;(global.enemy_turn=0)global.player_wait_wait=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pushed
if (pushed=1)
{
    obj_overlay_test.range_array[current_range_array]=0;
    scr_pushed(current_range_array,0);
    pushed=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///infection

if (alive=1)&amp;&amp;(infected=1)
{
    varient+=1;
    start_up=1;
    infected=1;
    alive=0;
    if !current_player_wait_wait_array=-5 obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
    current_player_wait_wait_array=-5
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.x=x;
state_visual.y=y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shielded

if (winding_down=0)&amp;&amp;(varient=0)
{
    if (shield=-1)
    {
        shield=instance_create(x,y,obj_enemie_shielded);
        shield.depth=depth+2;
    }
    else
    {
        shield.x=x;
        shield.y=y;
    }
}
else
{
    if !(shield=-1)
    {
        shield.destroy=1;
        shield=-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn
if((((current_range_array=global.enemy_countdown)&amp;&amp;(global.player_wait_wait=0))||((current_player_wait_wait_array=global.enemy_countdown)&amp;&amp;(global.player_wait_wait=1)))&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0))||(turn_gate=1)
{
    //start of enemy turn
    if(global.enemy_acting=0)
    {
        scr_enemy_turn_start_up_2();
    }
    
    //do something
    if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)&amp;&amp;(turn_gate=0)
    {
        
        
        if varient=0 scr_determin_action_mole_wait();
        else scr_determine_action();
        esthetic_wait=10;
        turn_gate=1;
    }
    //''thinking time''
    if(esthetic_wait&gt;=0)esthetic_wait-=1;
    //end turn
    if((global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)&amp;&amp;(turn_gate=1))
    {
        esthetic_wait=0;
        global.enemy_acting=0;
        turn_gate=0;
    }
}
if(global.enemy_turn=0)&amp;&amp;(moved_back=1)moved_back=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mole stuff
if varient=0
{
if(attack_bank&gt;0)&amp;&amp;(winding_down=0)
{
    //start going_underground
    if (mole_start_up=1)
    {
       //switch player_wai_wait_array prt 1 by removing position in current range_array
         obj_overlay_test.range_array[current_range_array]=0;
         current_range_array=-5;
        //set up sprite
        sprite_index=spr_moles_dig_in;
        image_xscale=13;
        image_yscale=image_xscale;
        image_speed=15/60;
        //bloc off start_up
        mole_start_up=0;
        mole_x=x;
        mole_y=y;
        mole_current_range_array=current_range_array;
        //switch to player_wait_wait_array
        scr_determin_player_wait_wait_array();
    }
    if(sprite_index=spr_moles_dig_in)&amp;&amp;(image_index&gt;16)
    {
        // pause animation and move to a new position tobe out of way
        image_speed=0;
        x=3000;
        y=0;
        
        
    }



}

if(attack_bank&gt;0)&amp;&amp;(winding_down&gt;0)
{
    //switch to wind down and reappear at random place
    if(mole_start_up=0)
    {
        
        var come_up=irandom(2);
        var temp_x=152+321*come_up ;
        var temp_y=1231;
        // move_up all instance and change place in range array
        if !place_meeting(temp_x+10,271,all)&amp;&amp;place_meeting(temp_x,512,all)
        {
            
            moving1=instance_place(temp_x+10,512,all)
            obj_overlay_test.range_array[moving1.current_range_array]=0;
            moving1.y-=240;
            /*moving1.current_range_array=scr_range_check(moving1.x,moving1.y,moving1.range);*/
        }
        
        if !place_meeting(temp_x+10,512,all)&amp;&amp;place_meeting(temp_x,753,all)
        {
            moving2=instance_place(temp_x+10,753,all)
            obj_overlay_test.range_array[moving2.current_range_array]=0;
            moving2.y-=240;
            /*moving2.current_range_array=scr_range_check(moving2.x,moving2.y,moving2.range)*/;
        }
        
        if !place_meeting(temp_x+10,753,all)&amp;&amp;place_meeting(temp_x,993,all)
        {
            moving3=instance_place(temp_x+10,993,all)
            obj_overlay_test.range_array[moving3.current_range_array]=0;
            moving3.y-=240;
           /* moving3.current_range_array=scr_range_check(moving3.x,moving3.y,moving3.range);*/
        }
        
        if !place_meeting(temp_x+10,993,all)&amp;&amp;place_meeting(temp_x+10,1233,all)
        {
            moving4=instance_place(temp_x+10,1233,all)
            obj_overlay_test.range_array[moving4.current_range_array]=0;
            moving4.y-=240;
            moved_4=1;
            moving4=0
            /*moving4.current_range_array=scr_range_check(moving4.x,moving4.y,moving4.range);*/

        }
        x=temp_x;
        y=temp_y;
        mole_x=0
        mole_y=0;
        
        /*scr_range_check(x,y,range);*/
        image_index=0;
        sprite_index=spr_moles_dig_out;
        image_xscale=13;
        image_yscale=image_xscale;
        image_speed=15/60;   
        moved_back=1;
        mole_start_up=1;
        obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
        current_player_wait_wait_array=-5;
         if x=152 current_range_array=4;
        if x=152+321 current_range_array=9;
        if x=152+321+321 current_range_array=14;
        obj_overlay_test.range_array[current_range_array]=range;
    }
}

/*if (sprite_index=spr_moles_dig_out)&amp;&amp;(image_index&gt;4)&amp;&amp;(image_index&lt;=6)
{
    if !place_meeting(x+10,y-240,all)&amp;&amp;place_meeting(x,y,all)
        {
            moving4=instance_place(x,y,all)
            if (!moving4=id)&amp;&amp; (moving4&gt;0)
            obj_overlay_test.range_array[moving4.current_range_array]=0;
            moving4.y-=240;
            moved_4=1;
        }  
}*/
}
if (sprite_index=spr_moles_dig_out)&amp;&amp;(image_index&gt;21)
{
    /*if !place_meeting(x+10,993,all)&amp;&amp;place_meeting(x,y,all)
        {
            moving4=instance_place(x,y,all)
            if (!moving4=id)&amp;&amp; (moving4&gt;0)
            obj_overlay_test.range_array[moving4.current_range_array]=0;
            moving4.y-=240;
            moved_4=1;
            /*moving4.current_range_array=scr_range_check(moving4.x,moving4.y,moving4.range);*/

        /*}*/
    sprite_index=spr_moles;
    image_xscale=13;image_yscale=image_xscale; 
   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
