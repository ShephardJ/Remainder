<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-98</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>top=instance_create(0,0,obj_main_menu_top);
bottom=instance_create(0,1920/2,obj_main_menu_bottom);

if file_exists("options.sav")
{
    ini_open("options.sav")
    global.vol_fx=ini_read_real("Options","vol_fx",0.66);
    global.vol_music=ini_read_real("Options","vol_music",0.5)
    global.difficult=ini_read_real("Options","Difficult",0)
    ini_close();
}
else
{
    global.vol_music=0.5;
    global.vol_fx=0.66;
    global.difficult=0;
}

touch_type=0;
chosen=0;
destroy=0;
comfirm=0;
next_player_state=0;
master=0;
    transition_count=0;
    transition_delay=0;
var q=irandom(5)
if q=0 ask="WHERE YA GOIN'STRANGER?"
if q=1 ask="WHERE TO?"
if q=2 ask="NEED TO LEAVE?"
if q=3 ask="WHERE YA OFF TO?"
if q=4 ask="WHERE DO YA NEED TO GO?"
if q=5 ask="WHERE YA HEADIN'?"

var q=irandom(5)
if q=0 ok="LET'S GO THEN"
if q=1 ok="ALRIGHT, LET'S GO"
if q=2 ok="ALL ABOARD!"
if q=3 ok="GET GOIN' THEN!"
if q=4 ok="OKAY"
if q=5 ok="GOTTA GET MOVIN' THEN"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>touch_type=scr_get_input();

if(touch_type=1)&amp;&amp;chosen=0&amp;&amp;destroy=0
{   
    instance_create(mouse_x-6*13,mouse_y-6.5*13,obj_tap);
    //adventure
    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+4*7.8)&amp;&amp;(mouse_y&lt;1920/2+34*7.8) 
    {
        
        chosen=1;
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }
    //arcade
    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
    {
        chosen=2;
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }
    //options
    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
    {
        chosen=3;
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }

    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+90*7.8)&amp;&amp;(mouse_y&lt;1920/2+116*7.8) 
    {
        chosen=4;
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }
    touch_type=0
}

if chosen&gt;0&amp;&amp;destroy=0
{
    if (touch_type=1)
    {
        instance_create(mouse_x-6*13,mouse_y-6.5*13,obj_tap);
        //adventure
        if chosen=1
        {
            //new game
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+4*7.8)&amp;&amp;(mouse_y&lt;1920/2+34*7.8) 
            {
                
                destroy=1
                global.next_player_room=room3
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            //continue
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
            {
                if file_exists("options.sav")&amp;&amp;file_exists("save.sav")&amp;&amp;file_exists("point.sav")&amp;&amp;file_exists("world.sav")&amp;&amp;file_exists("info.sav")&amp;&amp;file_exists("tile.sav")
                {
                    destroy=1
                    global.next_player_room=room5
                    scr_general_load("save.sav");
                    scr_point_load("point.sav");
                    scr_world_load("world.sav");
                    scr_info_load("info.sav");
                    scr_tile_load("tile.sav");
                }
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            //back
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
            {
                chosen=0;
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
        }
        //arcade
        if chosen=2
        {
            //play
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
            {
                destroy=1
                global.next_player_room=arcade_mode
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            
            //back
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
            {
                chosen=0;
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
        }
        
        //options
        if chosen=3
        {
            //difficult
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+4*7.8)&amp;&amp;(mouse_y&lt;1920/2+34*7.8) 
            {
                global.difficult+=1;
                if global.difficult=3 global.difficult=0;
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            //music
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
            {
                
                if global.vol_music/0.5*100&lt;25 global.vol_music=0.5*25/100;
                else
                if global.vol_music/0.5*100&gt;=25&amp;&amp;global.vol_music/0.5*100&lt;50 global.vol_music=0.5*50/100;
                else
                if global.vol_music/0.5*100&gt;=50&amp;&amp;global.vol_music/0.5*100&lt;75 global.vol_music=0.5*75/100;
                else
                if global.vol_music/0.5*100&gt;=75&amp;&amp;global.vol_music/0.5*100&lt;100 global.vol_music=0.5;
                else if global.vol_music/0.5*100&gt;=100 global.vol_music=0.5*0.1/100;
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            
            //fx
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
            {
                
                if global.vol_fx/0.66*100&lt;25 global.vol_fx=0.66*25/100;
                else
                if global.vol_fx/0.66*100&gt;=25&amp;&amp;global.vol_fx/0.66*100&lt;50 global.vol_fx=0.66*50/100;
                else
                if global.vol_fx/0.66*100&gt;=50&amp;&amp;global.vol_fx/0.66*100&lt;75 global.vol_fx=0.66*75/100;
                else
                if global.vol_fx/0.66*100&gt;=75&amp;&amp;global.vol_fx/0.66*100&lt;100 global.vol_fx=0.66;
                else
                if global.vol_fx/0.66*100&gt;=100 global.vol_fx=0;
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            
            //back
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+90*7.8)&amp;&amp;(mouse_y&lt;1920/2+116*7.8) 
            {
                chosen=0;
                scr_options_save("options.sav");
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
        }
        
        //character
        if chosen=4
        {
            //default
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+4*7.8)&amp;&amp;(mouse_y&lt;1920/2+34*7.8) 
            {
                global.character=0;
                chosen=0;
                scr_save_pro("pro.sav");
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            //rogish
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8)&amp;&amp;global.progress&gt;1499
            {
                
                global.character=1;
                chosen=0;
                scr_save_pro("pro.sav");
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            
            //battlemage
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8)&amp;&amp;global.progress&gt;4999
            {
                
                global.character=2;
                chosen=0;
                scr_save_pro("pro.sav");
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
            
            //heavy
            if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+90*7.8)&amp;&amp;(mouse_y&lt;1920/2+116*7.8)&amp;&amp;global.progress&gt;7499
            {
                global.character=3;
                chosen=0;
                scr_save_pro("pro.sav");
                player_tap_sound=audio_play_sound(snd_player_tap,5,false);
                audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
                audio_sound_pitch(player_tap_sound,0.925);
            }
        }
        touch_type=0
    }
}

if destroy=1
{
    scr_world_transition()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var txt_col=$f4f4f4;
if chosen=0&amp;&amp;destroy=0
{   
    draw_set_colour(txt_col);
    draw_set_font(font0);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_text_ext(1080/2,200,ask,48,900);

    {
        draw_text_ext(1080/2,1920/2+8*7.8,"ADVENTURE",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+36*7.8,"ARCADE",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+64*7.8,"OPTIONS",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+90*7.8,"CHARACTER",31*7.8,109*7.8);
    }
}

if chosen&gt;0&amp;&amp;destroy=0
{   
    draw_set_colour(txt_col);
    draw_set_font(font0);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    if chosen=1
    {
        draw_text_ext(1080/2,1920/2+8*7.8,"NEW GAME",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+36*7.8,"CONTINUE",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+64*7.8,"BACK",31*7.8,109*7.8);
    }
    if chosen=2
    {
        draw_text_ext(1080/2,1920/2+36*7.8,"NEW GAME",31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+64*7.8,"BACK",31*7.8,109*7.8);
    }
    if chosen=3
    {
        draw_text_ext(1080/2,1920/2+8*7.8,"difficulty "+string(global.difficult),31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+36*7.8,"MUSIC "+string(round(global.vol_music/0.50*100)),31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+64*7.8,"FX "+string(round(global.vol_fx/0.66*100)),31*7.8,109*7.8);
        draw_text_ext(1080/2,1920/2+90*7.8,"BACK",31*7.8,109*7.8);
    }
    if chosen=4
    {
        if global.progress&lt;1500 draw_text_ext(1080/2,200,"PROGRESS "+string(global.progress)+" / "+string(1500),48,900);
        if global.progress&lt;5000&amp;&amp;global.progress&gt;1499 draw_text_ext(1080/2,200,"PROGRESS "+string(global.progress)+" / "+string(5000),48,900);
        if global.progress&lt;7500&amp;&amp;global.progress&gt;4999 draw_text_ext(1080/2,200,"PROGRESS "+string(global.progress)+" / "+string(7500),48,900);
         draw_text_ext(1080/2,1920/2+8*7.8,"DEFAULT",31*7.8,109*7.8);
        if global.progress&gt;1499 draw_text_ext(1080/2,1920/2+36*7.8,"ROGUE ",31*7.8,109*7.8);
        if global.progress&gt;4999draw_text_ext(1080/2,1920/2+64*7.8,"MAGE",31*7.8,109*7.8);
        if global.progress&gt;7499draw_text_ext(1080/2,1920/2+90*7.8,"HEAVY",31*7.8,109*7.8);
    }
}
if destroy=1
{
    draw_text_ext(1080/2,200,ok,48,900);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
