<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-98</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>top=instance_create(0,0,obj_world_talk_top);
bottom=instance_create(0,1920/2,obj_world_talk_bottom);
//set home world
if global.current_world=0 home_world=irandom_range(1,2);
if global.current_world=1||global.current_world=2 home_world=irandom_range(3,6);
if global.current_world&gt;2 home_world=irandom_range(3,6);

//set info
info=-1

var i=0
var role=0;
var role_count=0;

    do
    {
        var role_check=0;
        
        //set role
        role=irandom(29)
        if role=1 role=0
        if role&gt;5&amp;&amp;role&lt;10||role&gt;17&amp;&amp;role&lt;22||role&gt;25&amp;&amp;role&lt;30 role-=4;
        if role=12||role=13 role-=2
        
        //set role_check
        if role=0 role_check=1
        if role&gt;1&amp;&amp;role&lt;6||role&gt;13&amp;&amp;role&lt;18||role&gt;21&amp;&amp;role&lt;26 role_check=role+4;
        if role=10||role=11 role_check=role+2;
        
        //set info
        if global.info_array[home_world,role_check]=0
        {
            info=global.info_array[home_world,role];
            /*global.info_array[home_world,role_check]=1;*/
        }
        else role_count+=1;
        
    }
    until !(info=-1)||role_count=30
    if role_count=30 info="NOTHIN' TO SAY."
    role=0;
    role_count=0;
    i+=1

//1 friendly
type=global.point_array[global.world_player_point,1];
if type=1
{
    var rolin=irandom(2)
    if rolin=0 ask="HOW YA DOIN' ";
    if rolin=1 ask="HOW DO YA DO";
    if rolin=2 ask="HELLO";
}

if type=2
{
    var rolin=irandom(2)
    if rolin=0 ask="WHO GOES THERE";
    if rolin=1 ask="WHAT DO YOU WANT";
    if rolin=2 ask="Who ARE YOU";
}

if type=3
{
    var rolin=irandom(2)
    if rolin=0 ask="WE DON'T WANT ANY TROUBLE'"
    if rolin=1 ask="PLEASE LEAVE";
    if rolin=2 ask="GO AWAY";
}


state=0;
touch_type=0;
chosen=0;
destroy=0;
comfirm=0;
next_player_state=0;
master=0;
transition_count=0;
transition_delay=0;
exit_var=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>touch_type=scr_get_input();

if(touch_type=1)&amp;&amp;chosen=0&amp;&amp;destroy=0
{   
    //advance
    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
    {
        chosen=2;
        state=0
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }
    //leave
    if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
    {
        chosen=3;
        state=3
        player_tap_sound=audio_play_sound(snd_player_tap,5,false);
        audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
        audio_sound_pitch(player_tap_sound,0.925);
    }
    touch_type=0
}

if chosen&gt;0&amp;&amp;destroy=0
{
    //main
    if (touch_type=1)&amp;&amp;state=0
    {
       instance_create(mouse_x-6*13,mouse_y-6.5*13,obj_tap);
        //adventure
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+4*7.8)&amp;&amp;(mouse_y&lt;1920/2+34*7.8) 
        {
            role=random_range(0,0.25)
            //success
            if 0.75/type+role&gt;0.5
            {
                ask=info;
                state=1;
            }
            else
            {
                if 0.75/type+role&gt;0.3
                {
                    ask="ya BETTER LEAVE."
                    state=1;
                }
                else
                {
                    ask="ya MESSED UP NOW, KID."
                    state=2;
                }
            }
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
        //bribe
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) &amp;&amp;global.gold&gt;9
        {
            role=random_range(0,0.25)
            //success
            if 0.75/type+role&gt;0.4
            {
                global.gold-=10;
                ask=info;
                state=1;
            }
            else
            {
                if 0.75/type+role&gt;0.28
                {
                    global.gold-=10;
                    ask="ya BETTER LEAVE."
                    state=1;
                }
                else
                {
                    global.gold-=10;
                    ask="ya MESSED UP NOW, KID."
                    state=2;
                }
            }
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
        //force
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+61*7.8)&amp;&amp;(mouse_y&lt;1920/2+89*7.8) 
        {
            role=random_range(0,0.25)
            //success
            if 0.75/(4-type)+role&gt;0.5
            {
                ask=info;
                state=1;
            }
            else
            {
                if 0.75/type+role&gt;0.3
                {
                    ask="ya BETTER LEAVE."
                    state=1;
                }
                else
                {
                    ask="IT'S PEOPLE LIKE YOU WHO MAKE THIS WORLD HELL."
                    state=2;
                }
            }
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
    
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+90*7.8)&amp;&amp;(mouse_y&lt;1920/2+116*7.8) 
        {
            state=3
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
        touch_type=0
    }
    //read
    if (touch_type=1)&amp;&amp;state=1
    {
       //advance
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
        {
            state=3;
            
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
        touch_type=0
    }
    //go to fight
    if (touch_type=1)&amp;&amp;state=2
    {
       
       //advance
        if(mouse_x&gt;19*7.8)&amp;&amp;(mouse_x&lt;120*7.8)&amp;&amp;(mouse_y&gt;1920/2+34*7.8)&amp;&amp;(mouse_y&lt;1920/2+61*7.8) 
        {
            state=3;
            global.next_player_room=fight_room
            player_tap_sound=audio_play_sound(snd_player_tap,5,false);
            audio_sound_gain(player_tap_sound,global.vol_fx*0.6,0);
            audio_sound_pitch(player_tap_sound,0.925);
        }
    }
    //leave
    if state=3
    {
       exit_var=1;
       
    }
}

if destroy=1
{
    top.destroy=1;
    bottom.destroy=1;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var txt_col=$f4f4f4;

    draw_set_colour(txt_col);
    draw_set_font(font0);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    if chosen =0 
    {
        draw_text_ext(1080/2,200,"APPROACH?",48,900);
        draw_text_ext(1080/2,1920/2+36*7.8,"YES",40,82*7.8);
        draw_text_ext(1080/2,1920/2+64*7.8,'NO',40,82*7.8);
    }
    else
    {
        draw_text_ext(1080/2,200,ask,48,900);
        if state=0
        {
            draw_text_ext(1080/2,1920/2+8*7.8,"TALK",40,82*7.8);
            draw_text_ext(1080/2,1920/2+26*7.8,string(clamp(((0.75/type)+0.25-0.5)/0.25*100,0,100))+" CHANCE",40,82*7.8);
            draw_text_ext(1080/2,1920/2+36*7.8,"BRIBE 10G",40,82*7.8);
            draw_text_ext(1080/2,1920/2+54*7.8,string(clamp(((0.75/type)+0.25-0.4)/0.25*100,0,100))+" CHANCE",40,82*7.8);
            draw_text_ext(1080/2,1920/2+64*7.8,"FORCE",40,82*7.8);
            draw_text_ext(1080/2,1920/2+80*7.8,string(clamp(((0.75/(4-type))+0.25-0.5)/0.25*100,0,100))+" CHANCE",40,82*7.8);
            draw_text_ext(1080/2,1920/2+90*7.8,"LEAVE",40,82*7.8);
        }
        else
        {
            draw_text_ext(1080/2,1920/2+36*7.8,"CONTINUE",40,82*7.8);
        }
    }


if destroy=1
{
    draw_text_ext(1080/2,200,ok,48,900);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
