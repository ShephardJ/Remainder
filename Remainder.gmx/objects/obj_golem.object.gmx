<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth+=1;

att_fx=0;
//setting initial y position
if(place_meeting(x,y,all))
{
do
{
    offset=irandom(global.spawn_cap);
    y=271+240*offset;
}
until(!place_meeting(x,y,all))
}
//setting varient
start_up=1;

//reposition variable
range_check=1;
initial_range_array=0;
current_range_array=0;

//taking damage var
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;
waiting=0;
pushed=0;
image_speed=1/25;

//turn vars
mouvement_banked=0;
moved=0;
attack_bank=0;
attacking=0;
winding_down=0;
esthetic_wait=3;
moved_back=0;

//dtrack
dtrack=0;
vtrack=0;
htrack=0;
split_l=1;

alive=0;
infected=0;

crack=instance_create(x,y,obj_golem_crack);
crack.depth=depth-1;

audio_hit_player=snd_golem_hit_player;
if (!audio_group_is_loaded(golem_audio))audio_group_load(golem_audio);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.destroy=1;
obj_overlay_test.range_array[current_range_array]=0;
anim=instance_create(x,y,obj_golem_death);
if (varient=0) anim.sprite_index=spr_golem_classic_death;
if (varient=1) anim.sprite_index=spr_golem_v_cut_right_death;
if (varient=2) anim.sprite_index=spr_golem_v_cut_left_death;
if (varient=3) anim.sprite_index=spr_golem_h_cut_top_death;
if (varient=4) anim.sprite_index=spr_golem_h_cut_bottom_death;

if room=fight_room
{
        var adjust=1
    if global.info_array[global.current_world,10]="DRY SEASON"||global.info_array[global.current_world,11]="DRY SEASON" adjust+=1/6;
    if global.info_array[global.current_world,10]="WET SEASON"||global.info_array[global.current_world,11]="WET SEASON" adjust-=1/6;
    if global.info_array[global.current_world,10]="EQUALITY"||global.info_array[global.current_world,11]="EQUALITY" adjust+=1/6;
    if global.info_array[global.current_world,10]="INEQUALITY"||global.info_array[global.current_world,11]="INEQUALITY" adjust-=1/6;
    if varient=0 global.gold+=round(12*((8-global.difficult)/8)*adjust);
    if varient=1 global.gold+=round(6*((8-global.difficult)/8)*adjust);
    if varient=2 global.gold+=round(6*((8-global.difficult)/8)*adjust);
    if varient=3 global.gold+=round(6*((8-global.difficult)/8)*adjust);
    if varient=4 global.gold+=round(6*((8-global.difficult)/8)*adjust);
    
    if varient=0 global.gold_accumulated+=round(12*((8-global.difficult)/8)*adjust);
    if varient=1 global.gold_accumulated+=round(6*((8-global.difficult)/8)*adjust);
    if varient=2 global.gold_accumulated+=round(6*((8-global.difficult)/8)*adjust);
    if varient=3 global.gold_accumulated+=round(6*((8-global.difficult)/8)*adjust);
    if varient=4 global.gold_accumulated+=round(6*((8-global.difficult)/8)*adjust);
}

if room=arcade_mode
{
    if varient=0 global.gold+=round(12*((8-global.difficult)/8));
    if varient=1 global.gold+=round(6*((8-global.difficult)/8));
    if varient=2 global.gold+=round(6*((8-global.difficult)/8));
    if varient=3 global.gold+=round(6*((8-global.difficult)/8));
    if varient=4 global.gold+=round(6*((8-global.difficult)/8));
    
    if varient=0 global.gold_accumulated+=round(12*((8-global.difficult)/8));
    if varient=1 global.gold_accumulated+=round(6*((8-global.difficult)/8));
    if varient=2 global.gold_accumulated+=round(6*((8-global.difficult)/8));
    if varient=3 global.gold_accumulated+=round(6*((8-global.difficult)/8));
    if varient=4 global.gold_accumulated+=round(6*((8-global.difficult)/8));
}

if crack&gt;-5 crack.destroy=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars 
if(start_up=1)
{
    scr_stats_golem();
    start_up=0;
}

image_xscale=13;
image_yscale=image_xscale;
//keep variables going
hp=hp;
wind_up=wind_up;
range=range;
wind_down=wind_down;
mouvement_speed=mouvement_speed;
slash_resistence=slash_resistence;
pierce_resistence=pierce_resistence;
current_range_array=current_range_array;




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///range_check
if(range_check=1)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition&gt;0)
{
    do
    {
        offset=irandom(global.spawn_cap);
        y=271+240*offset;
    }
    until(!place_meeting(x,y,all))
    current_range_array=scr_range_check(x,y,range);
    initial_range_array=current_range_array;
    range_check=0;
    global.wait_for_reposition-=1;
}

if(range_check=0)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition=0)
{
    current_range_array=round(scr_range_check(x,y,range));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(global.attack_fx&gt;0)&amp;&amp;(waiting=0)||(pushed=1)
{
    att_fx=global.attack_fx;
    d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    //change varient
    if(varient=0)
    {
        //do tracking
        if/*(damage_taken_type_1=0)*/instance_exists(obj_weapon_slash) vtrack+=1;
        if/*(damage_taken_type_1=1)*/instance_exists(obj_weapon_thrust)||instance_exists(obj_item_projectile_fx) htrack+=1;
        dtrack=vtrack+htrack;
        if (dtrack=4)
        {
            //hsplit
            if /*(damage_taken_type_1=1)*/instance_exists(obj_weapon_slash)
            {
                varient=4;
                start_up=1;
                if (place_meeting(x+20,y-240,all))
                {
                    hit=instance_place(x+20,y-240,all)
                    with hit
                    {
                        instance_destroy();
                    }
                }
                split=instance_create(x,y-240,obj_golem);
                with split{varient=3;range_check=0;}
                global.enemie_total+=1;
            }
            //vsplit
            if /*(damage_taken_type_1=0)*/instance_exists(obj_weapon_thrust)||instance_exists(obj_item_projectile_fx)
            {
                if(x&gt;400)&amp;&amp;(x&lt;700){var rg=irandom(1);if(rg=0) split_l=1;else split_l=-1;}
                if(x&gt;700)split_l=-1;
                
                if (place_meeting(x+split_l*320,y,all))
                {
                    hit=instance_place(x+split_l*320,y,all)
                    with hit
                    {
                        instance_destroy();
                    }
                }
                if(split_l=1){varient=2;split=instance_create(x+split_l*320,y,obj_golem);with split{varient=1;range_check=0;}}
                if(split_l=-1){varient=1;split=instance_create(x+split_l*320,y,obj_golem);with split{varient=2;range_check=0;}}
                start_up=1;
                global.enemie_total+=1;
            }
        }
    }
    
    //set pause
    waiting=1;
    hit=0;
    golem_hit_sound=audio_play_sound(snd_golem_hit,5,false);
    audio_sound_gain(golem_hit_sound,global.vol_fx*0.6,0);
    //damage reset
    damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;
    
}
////////////////////////////////////////////////////////////////////////////////////////////
//can be hit again if no attack fx on screen
if (global.attack_fx&lt;att_fx) {waiting=0;hit=0}
/////////////////////////////////////////////////////////////////////////////////////////////
//destroy if hp&lt;0
if (hp&lt;=0) 

{
        audio_sound_gain(golem_hit_sound,0,0);
        golem_dead_sound=audio_play_sound(snd_golem_death,5,false);
        audio_sound_gain(golem_dead_sound,global.vol_fx*0.75,0);
        instance_destroy();
}
    


image_speed=((1/25)*(hp/init_hp));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pushed
if (pushed=1)
{
    obj_overlay_test.range_array[current_range_array]=0;
    scr_pushed(current_range_array,0);
    pushed=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn
if(current_range_array=global.enemy_countdown)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;(global.player_wait_wait=0)
{
    //start of enemy turn
    if(global.enemy_acting=0)
    {
        scr_enemy_turn_start_up();
    }
    
    //do something
    if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)
    {
        scr_determine_action();
        esthetic_wait=3;
    }
    //''thinking time''
    if(esthetic_wait&gt;=0)esthetic_wait-=1;
    
}
if(global.enemy_turn=0)&amp;&amp;(moved_back=1)moved_back=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.x=x;
state_visual.y=y;
if crack&gt;0
{
    crack.x=x;
    crack.y=y;
    crack.image_index=image_index;
    crack.dtrack=dtrack;
    if dtrack=4||varient&gt;0
    {
        crack.destroy=1;
        crack=-5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
