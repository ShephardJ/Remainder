<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth+=1;

shield=-1;

att_fx=0;
//setting varient
start_up=1;

//reposition variable
range_check=1;
initial_range_array=0;
current_range_array=0;

//taking damage var
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;
waiting=0;
pushed=0;
image_speed=1/25;

//turn vars
mouvement_banked=0;
moved=0;
attack_bank=0;
attacking=0;
winding_down=0;
esthetic_wait=3;
moved_back=0;


shield_slash_resistence=0.25;
shield_pierce_resistence=0.25;
shield_fire_resistance=0.5;
shield_ice_resistance=0.5;
shield_poison_resistance=1;
shield_push_resistance=0.25;

temp_sprite=0;

alive=1;
infected=0;

varient=1;
hit_count=0;
spear=-1;

current_player_wait_wait_array=-5;

audio_hit_player=snd_soldier_hit_player;
if (!audio_group_is_loaded(soldier_audio))audio_group_load(soldier_audio);
init_hp=20;
        hp=20;
        wind_up=2;
        damage_type_1=0;
        damage_1=2;
        damage_type_2=0;
        damage_2=0;
        range=2;
        wind_down=2;
        mouvement_speed=1;
        slash_resistence=0.5;
        pierce_resistence=0.5;
        fire_resistance=.75;
        ice_resistance=0.75;
        poison_resistance=1.25;
        push_resistance=0.5;
        sprite_index=spr_army_blocking;
        attack_type=0;
        alive=1;
        infected=0;
spear_count=0;
state=1;
last_in_list=0;
spear_lock=1;
listing=0;
flee=0;
    scr_determin_player_wait_wait_array();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_army_soldier)&amp;&amp;last_in_list=1
{
    var doin=1
    do 
    {
        if obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array+doin]=2
        {
    
        }
        else
        {
            doin+=1;
        }
    }
    until obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array+doin]=2||current_player_wait_wait_array+doin=14
    
    obj_overlay_test.listing=current_player_wait_wait_array+doin
}
state_visual.destroy=1;
obj_overlay_test.range_array[current_range_array]=0;
obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
if shield&gt;-1 shield.destroy=1;
if room=fight_room
    {
        var adjust=1
    if global.info_array[global.current_world,10]="DRY SEASON"||global.info_array[global.current_world,11]="DRY SEASON" adjust+=1/6;
    if global.info_array[global.current_world,10]="WET SEASON"||global.info_array[global.current_world,11]="WET SEASON" adjust-=1/6;
    if global.info_array[global.current_world,10]="EQUALITY"||global.info_array[global.current_world,11]="EQUALITY" adjust-=1/6;
    if global.info_array[global.current_world,10]="INEQUALITY"||global.info_array[global.current_world,11]="INEQUALITY" adjust+=1/6;
        global.gold_accumulated+=round(3*((8-global.difficult)/8)*adjust);
        
        global.gold+=round(3*((8-global.difficult)/8)*adjust);
    
    }
    if room=arcade_mode
    {
        global.gold_accumulated+=round(3*((8-global.difficult)/8));
        
        global.gold+=round(3*((8-global.difficult)/8));
    }
if flee=0
{
    anim=instance_create(x,y,obj_army_soldier_death);
    anim.sprite_index=spr_army_death;
}
else
{
    anim=instance_create(x,y,obj_pesant_death);
    anim.sprite_index=spr_pesant_flee;
    anim.image_index=2;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars 
if(start_up=1)
{

    start_up=0;image_xscale=13;
    image_yscale=image_xscale;

}


//keep variables going
hp=hp;
wind_up=wind_up;
range=range;
wind_down=wind_down;
mouvement_speed=mouvement_speed;
slash_resistence=slash_resistence;
pierce_resistence=pierce_resistence;
current_range_array=current_range_array;
///transfer list
if listing&gt;0
{
    if current_player_wait_wait_array=listing last_in_list=1;
    listing=0;
}
//change_range
if (current_range_array=4||current_range_array=9||current_range_array=14) range=1;
if (current_range_array=3||current_range_array=8||current_range_array=13)
{
    if obj_overlay_test.range_array[current_range_array+1]=0 range=1;
    else range=2;
}

if flee=1 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///range_check
if(range_check=1)&amp;&amp;(start_up=0)
{

    current_range_array=scr_range_check(x,y,range);
    initial_range_array=current_range_array;
    range_check=0;

}

if(range_check=0)&amp;&amp;(start_up=0)
{
    current_range_array=round(scr_range_check(x,y,range));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(global.attack_fx&gt;0)&amp;&amp;(waiting=0)||(pushed=1)
{
    att_fx=global.attack_fx;
    if (winding_down=0)&amp;&amp;((varient=1)||(varient=4))&amp;&amp;hit_count&lt;4 d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,shield_pierce_resistence,shield_slash_resistence,shield_fire_resistance,shield_ice_resistance,shield_poison_resistance,shield_push_resistance);
    else d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    //infection
    if (varient=3)||(varient=7)scr_zombie_infection();
    //damage reset
    damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;
    waiting=1;
    hit=0;
    soldier_hit_sound=audio_play_sound(snd_soldier_hit,5,false);
    audio_sound_gain(soldier_hit_sound,global.vol_fx*0.65,0);
    hit_count+=1;
}

//can be hit again if no attack fx on screen
if (global.attack_fx&lt;att_fx) {waiting=0;hit=0}

//destroy if hp&lt;0
if (hp&lt;=0) 

{
    audio_sound_gain(soldier_hit_sound,0,0);
    soldier_dead_sound=audio_play_sound(snd_soldier_death,5,false);
    audio_sound_gain(soldier_dead_sound,global.vol_fx*0.65,0);
    instance_destroy();
}
    


if !(sprite_index=spr_army_throwing)image_speed=((1/25)*(hp/init_hp));
else image_speed=10/60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pushed
if (pushed=1)
{
    obj_overlay_test.range_array[current_range_array]=0;
    scr_pushed(current_range_array,0);
    pushed=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn
if(current_player_wait_wait_array=global.enemy_countdown)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;wait_lock_down=0
{
   if hit_count&lt;4&amp;&amp;spear_count=0&amp;&amp;!(state=1)
    {
        if spear=-1
        {
            temp_sprite=sprite_index;
            sprite_index=spr_army_throwing;
            image_index=0;
        }
    }
    wait_lock_down=1;
    
}

///turn
if(current_range_array=global.enemy_countdown)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;(global.player_wait_wait=0)
{
    if hit_count&lt;4&amp;&amp;state=1
    {
        //start of enemy turn
        if(global.enemy_acting=0)
        {
            scr_enemy_turn_start_up_2();
        }
    
        //do something
        if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)
        {
            scr_determine_action();
            esthetic_wait=3;
        }
        //''thinking time''
        if(esthetic_wait&gt;=0)esthetic_wait-=1;
        }
    else 
    {
        
        hit_count=0;
    }
    
}

if(global.enemy_turn=0){moved_back=0;wait_lock_down=0;attack_start_up=1;spear_count=0;state=1;spear_lock=1}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.x=x;
state_visual.y=y;

if sprite_index=spr_army_throwing
{
    if image_index&gt;8 &amp;&amp; spear=-1
    {
        spear=instance_create(x,y,obj_army_spear)
        if last_in_list=1 spear_count+=1;
    }
    if image_index&gt;13 {sprite_index=temp_sprite;spear=-1;}
}
else 
{
    spear=-1;
    if last_in_list=1&amp;&amp;!(state=1)&amp;&amp;wait_lock_down=1&amp;&amp;spear_lock=1
    {

        var scount=instance_number(obj_army_spear)
        if spear_count&gt;0
        {
            if scount&gt;0
            {
                 if scount&gt;spear_count spear_count=scount;
                 spear_count_mem=spear_count
            }
            else 
            {
                obj_overlay_test.damage_taken_1=spear_count;
                obj_overlay_test.player_damage_taken_type_1=1;
                obj_overlay_test.damage_taken_2=0;
                obj_overlay_test.player_damage_taken_type_2=0;
                obj_overlay_test.audio_player_hit=audio_hit_player;
                global.enemy_acting=0;
                spear_lock=0;

            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shielded
if (winding_down=0)&amp;&amp;((varient=1)||(varient=4))&amp;&amp;hit_count&lt;4
{
    if state=1
    {
    if (shield=-1)
    {
        shield=instance_create(x,y,obj_enemie_shielded);
        shield.depth=depth+2;
        sprite_index=spr_army_blocking;
    }
    else
    {
        shield.x=x;
        shield.y=y;
        if !(sprite_index=spr_army_blocking)sprite_index=spr_army_blocking;
    }
    }
}
else
{
    if !(shield=-1)&amp;&amp;(state=1)
    {
        shield.destroy=1;
        shield=-1;
        sprite_index=spr_army_attacking;
    }
    else {/*state=1*/}
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
