<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_airship_cannon_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=13;
image_yscale=image_xscale;

audio_hit_player=snd_player_hit;



damage_type_1=0;
damage_1=5;
damage_type_2=0;
damage_2=0;

move=0;
move_to_x=x;
move_to_y=y;
moving=0

hit=0;
hit_total=0;
hit_gate=1;
att_fx=0;
hitting=0;
y_check=0;

hit_by_ball=0;
hit_by_ball_gate=0;
hit_move_count=0;

struck_out=0;
strck_t_strt=1;
bounce_check=0;
bounce=0;
player_move=0

destroy=0;

pushed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy conditions
if y&gt;1318
{
    obj_overlay_test.damage_taken_1=damage_1;
    obj_overlay_test.player_damage_taken_type_1=damage_type_1;
    obj_overlay_test.damage_taken_2=damage_2;
    obj_overlay_test.player_damage_taken_type_2=damage_type_2;
    obj_overlay_test.audio_player_hit=audio_hit_player;
    player_hit=1;
    instance_destroy();
    obj_airship.cannon_balls_acting-=1;
}
if (x&lt;-130)||(x&gt;1080)
{
    instance_destroy();
    obj_airship.cannon_balls_acting-=1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move
if struck_out=0||player_move=1
{
if move = 1
{
    if instance_exists(obj_airship) obj_airship.cannon_balls_acting+=1;
    move_to_y=y+240;
    moving=1;
    move=0 ;
}
//move to x
if (abs(x-move_to_x)&gt;4)
{
    x+=(move_to_x-x)/6;
}
else 
{
    x=move_to_x;
}

if (abs(y-move_to_y)&gt;4)
{
    y+=(move_to_y-y)/6;
}
else 
{
    y=move_to_y;
}

if(y=move_to_y)&amp;&amp;(x=move_to_x)&amp;&amp;(moving=1)
{ 
       
        hit_by_ball=0;
        hit_by_ball_gate=0;
        moving=0;
        if bounce_check=1
        {
            if place_meeting(x,y,obj_airship_cannon_ball)
            {
                hitting=instance_place(x,y,obj_airship_cannon_ball);
                if hitting.struck_out=1 
                {
                    bounce=1;
                    ball_hit=audio_play_sound(snd_ball_bounce,6,false);
                    audio_sound_gain(ball_hit,global.vol_fx*0.55,0);
                    audio_sound_pitch(ball_hit,0.6+(0.4*((3-irandom_range(0,2))/3)))
                }
                else bounce=0;
            }
            else bounce=0;
            bounce_check=0;
        }
        if bounce=0 obj_airship.cannon_balls_acting-=1;
        player_move=0
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit 
if struck_out=0
{
if hit=1&amp;&amp;hit_gate=1
{
    //pushed
    if pushed=1
    {
        hit_move_count+=1
        hit_total+=1
        pushed=0;
    }
    hit_move_count+=1
    att_fx=global.attack_fx;
    hit_total+=1
    if hit_move_count&gt;=3
    {
        if instance_exists(obj_weapon_thrust)
        {
            move_to_y=y-240;
            moving=1;
            obj_airship.cannon_balls_acting+=1;
            hit_move_count=0;
            cannon_shot=audio_play_sound(snd_cannonshot,6,false);
            audio_sound_gain(cannon_shot,global.vol_fx*0.4,0);
            audio_sound_pitch(cannon_shot,1+(random_range(-0.5,-0.05)))
            ball_hit=audio_play_sound(snd_cannon_ball_and_weapon,6,false);
            audio_sound_gain(ball_hit,global.vol_fx*0.50,0);
            audio_sound_pitch(ball_hit,0.6+(0.4*((3-hit_move_count)/3)))
        }
        if instance_exists(obj_weapon_slash)
        {
        
            move_to_x=x+321*obj_weapon_slash.image_xscale;
            move_to_y=y-240;
            moving=1;
            obj_airship.cannon_balls_acting+=1;
            hit_move_count=0;
            ball_hit=audio_play_sound(snd_cannon_ball_and_weapon,6,false);
            audio_sound_gain(ball_hit,global.vol_fx*0.50,0);
            audio_sound_pitch(ball_hit,0.55+(0.4*((3-hit_move_count)/3)))
        }
        if!(instance_exists(obj_weapon_slash))&amp;&amp;!(instance_exists(obj_weapon_thrust))
        {
            ball_hit=audio_play_sound(snd_cannon_ball_and_arrow,6,false);
            audio_sound_gain(ball_hit,global.vol_fx*0.50,0);
            audio_sound_pitch(ball_hit,0.55+(0.4*((3-hit_move_count)/3)))
        }
    }
    else
    {
        ball_hit=audio_play_sound(snd_cannon_ball_and_arrow,6,false);
        audio_sound_gain(ball_hit,global.vol_fx*0.7,0);
        audio_sound_pitch(ball_hit,0.55+(0.4*((3-hit_move_count)/3)))
    }

    hit=0;
    hit_gate=0;
}
if (global.attack_fx&lt;att_fx) {hit_gate=1;hit=0;att_fx=0;}

//hit by cannon ball

if hit_by_ball=1&amp;&amp;hit_by_ball_gate=0&amp;&amp;moving=0
{
    obj_airship.cannon_balls_acting+=1;
    move_to_y=y-240;
    hit_by_ball=0;
    hit_by_ball_gate=1;
    moving=1;
    ball_hit=audio_play_sound(snd_ball_bounce,6,false);
    audio_sound_gain(ball_hit,global.vol_fx*0.45,0);
    audio_sound_pitch(ball_hit,0.6+(0.4*((3-irandom_range(0,2))/3)))
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit with ball
if moving=1
{   if (abs(x-move_to_x)&gt;4) {if move_to_x&gt;x var place_x_check=20;if move_to_x&lt;x var place_x_check=-20;}
    else var place_x_check=0;
    if (abs(y-move_to_y)&gt;4) var place_y_check=+40;
    else var place_y_check=0;
    if place_meeting(x+place_x_check,y+place_y_check,obj_airship_cannon_ball)
    {
        hitting=instance_place(x+place_x_check,y+place_y_check,obj_airship_cannon_ball)
        if hitting.hit_by_ball_gate=0 hitting.hit_by_ball=1;
    }
    
    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit_total &amp;&amp; animation
if hit_total&gt;=3
{
     bounce_check=1;
    if(y=move_to_y)&amp;&amp;(x=move_to_x)
    { 
       
        if moving=1 {}
        else
        {
            if bounce=0 struck_out=1;
            else 
            {
                move_to_y-=240;
                moving=1;
            }
        }
    }
}

if (sprite_index=spr_airship_cannon_ball) image_speed=(7/60)/(hit_total+1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///struck_out
if struck_out=1
{
    if strck_t_strt=1
    {
        sprite_index=spr_airship_cannon_ball_struck_out;
        image_index=0;
        image_speed=5/60;
        strck_t_strt=0;
        depth+=30;
    }
    if (strck_t_strt=0)&amp;&amp;(image_index&gt;4)
    {
        image_speed=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end phase
if instance_exists(obj_airship_cannon_zap)
{
    if place_meeting(x,y,obj_airship_cannon_zap)
    {
        sprite_index=spr_airship_cannon_ball_destroyed;
        image_speed=0;
        image_index=0;
    }
}

if !(instance_exists(obj_airship_cannon_zap))&amp;&amp;(sprite_index=spr_airship_cannon_ball_destroyed)
{
    image_speed=17/60;
}

if(sprite_index=spr_airship_cannon_ball_destroyed)&amp;&amp;(image_index&gt;8) instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit_cannon
if y&gt;511 y_check=1;
if place_meeting(x,y,obj_airship_cannon) &amp;&amp; y_check=1
{
    hitting=instance_place(x,y,obj_airship_cannon)
    hitting.hit=1;
    hitting.hp_lost=damage_1;
    instance_destroy();
    obj_airship.cannon_balls_acting-=1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=1 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
