<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_red_dragon_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=13;
image_yscale=image_xscale;
image_speed=8/60;
x=94;
y=238;
//create the 3 parts
var parts=3
do
{
    parts-=1;
    part_array[parts]=(instance_create(x,y,obj_red_dragon_part))
    part_array[parts].varient=parts;
}

until parts=0;
global.wait_for_reposition=0;
global.repositioned=1;
global.enemie_total=1;
player_move_forward=0;
moved_forward=0;

//phases
stunned=0;
stunned_count=0;
stunned_count_1=0;
stunned_count_2=0;
stunned_count_3=0;
death_sequence=3;
current_player_wait_wait_array=12;

//stats
init_hp=80;
hp=80;
slash_resistence=1;
pierce_resistence=1;
fire_resistance=1;
ice_resistance=1.5;
poison_resistance=1.5;
push_resistance=1;

//taking damage var
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;
waiting=0;
pushed=0;
hit_count=0;
if (!audio_group_is_loaded(blob_audio))audio_group_load(blob_audio);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var potions = global.player_potion-global.player_potion_current;
    if potions&gt;0
    {
        if potions=1 instance_create(x+(29*13),y+(42*13),obj_potion_ball_main);
        if potions &gt;1
        {
            instance_create(x+(29*13),y+(42*13),obj_potion_ball_main);
            instance_create(x+(29*13),y+(42*13),obj_potion_ball_main);
        }
    }
instance_create(x,y,obj_red_dragon_death);

if room=fight_room
{
    var adjust=1
    if global.info_array[global.current_world,10]="DRY SEASON"||global.info_array[global.current_world,11]="DRY SEASON" adjust+=1/6;
    if global.info_array[global.current_world,10]="WET SEASON"||global.info_array[global.current_world,11]="WET SEASON" adjust-=1/6;
    if global.info_array[global.current_world,10]="EQUALITY"||global.info_array[global.current_world,11]="EQUALITY" adjust-=1/6;
    if global.info_array[global.current_world,10]="INEQUALITY"||global.info_array[global.current_world,11]="INEQUALITY" adjust+=1/6;
     global.gold_accumulated+=round(60*((8-global.difficult)/8)*adjust);
   
    global.gold+=round(60*((8-global.difficult)/8)*adjust);

}
if room=arcade_mode
{
     global.gold_accumulated+=round(60*((8-global.difficult)/8));
    global.gold+=round(60*((8-global.difficult)/8));
}

if !current_player_wait_wait_array=-5 obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
current_player_wait_wait_array=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player_move_forward
if(player_move_forward=1)&amp;&amp;(moved_forward=0)
{
    if(part_array[0].y&lt;1205)&amp;&amp;(part_array[1].y&lt;1205)&amp;&amp;(part_array[2].y&lt;1205)
    {
        
        var parts=3
        do
        {
            parts-=1;
            part_array[parts].initial_y+=240;
            part_array[parts].pointy+=240;
            part_array[parts].moved_forward=1;
            var temp_array=part_array[parts].current_range_array+1;
            obj_overlay_test.range_array[part_array[parts].current_range_array]=0;
            part_array[parts].current_range_array=temp_array;
            obj_overlay_test.range_array[part_array[parts].current_range_array]=part_array[parts].range;
            
        }
        until parts=0;    
        obj_overlay_test.AP_lost=1;
        obj_overlay_test.temp_player_state=obj_overlay_test.current_player_combat_state
        obj_overlay_test.current_player_combat_state=player_combat_state.loosing_AP;
        y+=240;
        if (instance_exists(obj_red_dragon_core))heart.y+=240;
        moved_forward=1;
        global.player_wait_wait=1;
        current_player_wait_wait_array=12;
        player_move_sound=audio_play_sound(snd_player_move,5,false);
        audio_sound_gain(player_move_sound,global.vol_fx*0.6,0);
    }
    player_move_forward=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(global.attack_fx&gt;0)&amp;&amp;(waiting=0)||(pushed=1)
{
    d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    //set pause
    waiting=1;
    hit=0;
    hit_count+=1;
    lizard_hit_sound=audio_play_sound(snd_lizard_hit,5,false);
    audio_sound_gain(lizard_hit_sound,global.vol_fx*0.75,0);
    //damage reset
    damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;
}
/////////////////////////////////////////////////////////////////////////////////////////////
//can be hit again if no attack fx on screen
if (global.attack_fx=0) {waiting=0;hit=0}
/////////////////////////////////////////////////////////////////////////////////////////////
//destroy if hp&lt;0
if (hp&lt;=0) ||(hit_count=13)

{
        if (death_sequence=3)&amp;&amp;(!instance_exists(obj_exploding_parts))heart.destroy=2;
        if (death_sequence=2)&amp;&amp;(!instance_exists(obj_exploding_parts)){part_array[0].destroy=1;part_array[2].destroy=1;}
        if (death_sequence=1)&amp;&amp;(!instance_exists(obj_exploding_parts)){part_array[1].destroy=1;}
        if (death_sequence=0)&amp;&amp;(!instance_exists(obj_exploding_parts))instance_destroy();
        global.player_wait_wait=1;
        obj_overlay_test.current_player_combat_state=player_combat_state.waiting;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn and move_back
if (global.player_wait_wait=1)&amp;&amp;(hp&gt;0)&amp;&amp;(death_sequence=3)
{
    if (current_player_wait_wait_array=global.enemy_countdown)
    {
        global.enemy_acting=1;
            //stunned
        if (stunned=0)&amp;&amp;(global.enemy_turn=1)
        {
            if(part_array[0].stunned=1)stunned_count_1+=1;
            if(part_array[1].stunned=1)stunned_count_2+=1;
            if(part_array[2].stunned=1)stunned_count_3+=1;
            if (stunned_count_1=4){part_array[0].stunned=0;stunned_count_1=0;}
            if (stunned_count_2=4){part_array[1].stunned=0;stunned_count_2=0;}
            if (stunned_count_3=4){part_array[2].stunned=0;stunned_count_3=0;}
        }
        
        if (stunned=1)
        {
        
            if(stunned_count=3)
            {
                stunned=0
                stunned_count=0;
                part_array[0].stunned=0;
                part_array[1].stunned=0;
                part_array[2].stunned=0;
                //despawn_heart
             heart.destroy=1;
            }
            else stunned_count+=1;
        }
        
        //move_back
        if (moved_forward=1)&amp;&amp;(stunned=0)&amp;&amp;(global.enemy_turn=1)
        {
            var parts=3
            do
            {
                parts-=1;
                obj_overlay_test.range_array[part_array[parts].current_range_array]=0;
                part_array[parts].initial_y-=240;
                part_array[parts].moved_forward=0;
            }
            until parts=0;
            y-=240;
            if (instance_exists(obj_red_dragon_core))heart.y-=240;
            moved_forward=0;
        
        }
        /* if (global.enemy_turn=1)global.player_wait_wait=0;*/
        global.enemy_acting=0;
        
    }
    
    
    if(part_array[0].stunned=1)&amp;&amp;(part_array[1].stunned=1)&amp;&amp;(part_array[2].stunned=1)&amp;&amp;(stunned=0)&amp;&amp;(death_sequence=3) 
    {
        stunned=1;
        stunned_count_1=0;
        stunned_count_2=0;
        stunned_count_3=0
        //spawn heart
        heart=instance_create(x+(29*13),y+(42*13),obj_red_dragon_core);
    }
    
    
    
    
}


    


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate
if((hp/init_hp)&lt;2/3)image_speed=((8/60)*(5/6));
if((hp/init_hp)&lt;1/3)image_speed=((8/60)*(2/3));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pushed=1 pushed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
