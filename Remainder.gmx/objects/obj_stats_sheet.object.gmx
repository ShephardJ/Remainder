<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stats_sheet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-98</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
target_id=0;
start_up=1;
touch_type=0;
varient=0;
image_xscale=7.8;
image_yscale=image_xscale;

initialx=0;
initialy=0;

damage_type_text_array[0]="thrust";
damage_type_text_array[1]="slash";
damage_type_text_array[2]="fire";
damage_type_text_array[3]="ice";
damage_type_text_array[4]="poison";
damage_type_text_array[5]="physical";

        wind_up="?";
        damage_type_1="?";
        damage_1="?";
        damage_type_2="?";
        damage_2="?";
        range="?";
        wind_down="?";
        mouvement_speed="?";
        slash_resistence="?";
        pierce_resistence="?";
        fire_resistance="?";
        ice_resistance="?";
        poison_resistance="?";
        push_resistance="?";
        
obj=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_overlay_test)obj_overlay_test.current_player_combat_state=obj_overlay_test.temp_player_state;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(target_id=0)&amp;&amp;start_up=1{
    obj=target_id.object_index;
    if global.boss=0||global.boss=2||global.boss=3||global.boss=4||global.boss=5||global.boss=6||global.boss=7{
        varient=target_id.varient;
        if target_id.object_index=obj_skeleton&amp;&amp;((varient=0&amp;&amp;global.skeleton0)||(varient=1&amp;&amp;global.skeleton1)||(varient=2&amp;&amp;global.skeleton2)){
            scr_stats_skeleton();
            debug=1;
        }
        if target_id.object_index=obj_blob&amp;&amp;((varient=0&amp;&amp;global.blob0)||(varient=1&amp;&amp;global.blob1)||(varient=2&amp;&amp;global.blob2)||(varient=3&amp;&amp;global.blob3)||(varient=4&amp;&amp;global.blob4)){
            scr_stats_blob();
            debug=2;
        }
        if target_id.object_index=obj_zombie&amp;&amp;((varient=0&amp;&amp;global.zombie0)||(varient=1&amp;&amp;global.zombie1)||(varient=2&amp;&amp;global.zombie2)||(varient=3&amp;&amp;global.bzombie3)){
            scr_stats_zombie();
            debug=3;
        }
        if target_id.object_index=obj_lizard&amp;&amp;((varient=0&amp;&amp;global.lizard0)||(varient=1&amp;&amp;global.lizard1)||(varient=2&amp;&amp;global.lizard2)||(varient=3&amp;&amp;global.lizard3)||(varient=4&amp;&amp;global.lizard4)){
            scr_stats_lizard();
            debug=4;
        }
        if target_id.object_index=obj_golem&amp;&amp;((varient=0&amp;&amp;global.golem0)||(varient=1&amp;&amp;global.golem1)||(varient=2&amp;&amp;global.golem2)||(varient=3&amp;&amp;global.golem3)||(varient=4&amp;&amp;global.golem4)){
            scr_stats_golem();
            debug=5;
        }
        if target_id.object_index=obj_wizard&amp;&amp;((varient=0&amp;&amp;global.wizard0)||(varient=1&amp;&amp;global.wizard1)||(varient=2&amp;&amp;global.wizard2)||(varient=3&amp;&amp;global.wizard3)||(varient=4&amp;&amp;global.wizard4)||(varient=5&amp;&amp;global.wizard5)){
            scr_stats_wizard();
            debug=6;
        }
        if target_id.object_index=obj_soldier&amp;&amp;((varient=0&amp;&amp;global.soldier0)||(varient=1&amp;&amp;global.soldier1)||(varient=2&amp;&amp;global.soldier2)||(varient=3&amp;&amp;global.soldier3)||(varient=4&amp;&amp;global.soldier4)||(varient=5&amp;&amp;global.soldier5)||(varient=6&amp;&amp;global.soldier6)||(varient=7&amp;&amp;global.soldier7)){
            scr_stats_soldier();
            debug=7;
        }
        if (target_id.object_index=obj_cleric||target_id.object_index=obj_cleric_boss||target_id.object_index=obj_army_cleric)&amp;&amp;(varient=0&amp;&amp;global.cleric0){
            scr_stats_cleric();
            debug=8;
        }
        if target_id.object_index=obj_pesant&amp;&amp;((varient=0&amp;&amp;global.pesant0)||(varient=1&amp;&amp;global.pesant1)||(varient=2&amp;&amp;global.pesant2)||(varient=3&amp;&amp;global.pesant3)||(varient=4&amp;&amp;global.pesant4)){
            scr_stats_pesant();
            debug=9;
        }
        if target_id.object_index=obj_heads&amp;&amp;(((varient=0||varient=1||varient=2)&amp;&amp;global.heads0)||((varient=3||varient=4||varient=5)&amp;&amp;global.heads1)){
            scr_stats_heads();
            debug=10;
        }
        if target_id.object_index=obj_moles&amp;&amp;((varient=0&amp;&amp;global.mole0)||(varient=1&amp;&amp;global.mole1)){
            scr_stats_mole();
            debug=12;
        }
        if target_id.object_index=obj_spider&amp;&amp;((varient=0&amp;&amp;global.spiders0)||(varient=1&amp;&amp;global.spiders1)||(varient=2&amp;&amp;global.spiders2)||(varient=3&amp;&amp;global.spiders3)||(varient=4&amp;&amp;global.spiders4)){
            scr_stats_spiders();
            debug=13;
        }
        if target_id.object_index=obj_syphon&amp;&amp;(varient=0&amp;&amp;global.syphon0){
            scr_stats_syphon();
            debug=14;
        }
        if target_id.object_index=obj_crab&amp;&amp;((varient=0&amp;&amp;global.crab1)||(varient=1&amp;&amp;global.crab1)){
            scr_stats_crab();
            debug=14;
        }
        //bosses
        if target_id.object_index=obj_litch{
            scr_stats_litch();
            debug=15
        }
        if target_id.object_index=obj_airship_crew{
            scr_stats_skeleton_crew_stats();
            debug=16;
        }
        if target_id.object_index=obj_horseman_head||target_id.object_index=obj_horseman_body||target_id.object_index=obj_cavalry{
            scr_stats_horseman();
            debug=17;
        }
        if target_id.object_index=obj_army_soldier||target_id.object_index=obj_general{
            scr_stats_army();
            debug=18;
        }
    }
    sprite_index=spr_stats_sheet;
    start_up=0;
}
touch_type=scr_get_input();

if touch_type=1 instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//draw symbols
var txt_col=$f4f4f4;

// outline
draw_set_font(font0);
draw_set_colour(txt_col);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
if global.boss=0||global.boss=2||global.boss=3||global.boss=5||global.boss=6||global.boss=7
{
    draw_text(300,119,'DAMAGE 1');
    draw_text(780,119,'DAMAGE 2');
    draw_text(300,360,'DAMAGE 1 TYPE');
    draw_text(780,360,'DAMAGE 2 TYPE');
    
    draw_text(300,600,'SLASH MULT');
    draw_text(780,600,'THRUST MULT');
    draw_text(300,840,'PHYSICAL MULT');
    draw_text(780,840,'FIRE MULT');
    draw_text(300,1080,'ICE MULT');
    draw_text(780,1080,'POISON MULT');
    
    draw_text(1080/2,1320,'MOUVEMENT SPEED');
    draw_text(300,1560,'WIND UP');
    draw_text(780,1560,'COOL DOWN');
    
    draw_set_colour(txt_col);
    if start_up=0
    {
        
                draw_text(300,200,damage_1);
                draw_text(780,200,damage_2);
                draw_text(300,440,damage_type_text_array[damage_type_1]);
                draw_text(780,440,damage_type_text_array[damage_type_2]);
                
                draw_text(300,680,string(slash_resistence)+"X D TAKEN");
                draw_text(780,680,string(pierce_resistence)+"X D TAKEN");
                draw_text(300,920,string(push_resistance)+"X D TAKEN");
                draw_text(780,920,string(fire_resistance)+"X D TAKEN");
                draw_text(300,1160,string(ice_resistance)+"X D TAKEN");
                draw_text(780,1160,string(poison_resistance)+"X D TAKEN"); 
                
                draw_text(1080/2,1400,string(mouvement_speed) +" spaces");
                draw_text(300,1640,string(wind_up)+" turns");
                draw_text(780,1640,string(wind_down)+" turns"); 
    }
}
if global.boss=1||global.boss=8{
    draw_text(1080/2,840,'REVEAL THE HEART');
    draw_text(540,920,"TO SLAY THE BEAST");
}

if global.boss=4{
    if obj=obj_airship_crew
    {
        draw_text(300,119,'DAMAGE 1');
        draw_text(780,119,'DAMAGE 2');
        draw_text(300,360,'DAMAGE 1 TYPE');
        draw_text(780,360,'DAMAGE 2 TYPE');
        
        draw_text(300,600,'SLASH MULT');
        draw_text(780,600,'THRUST MULT');
        draw_text(300,840,'PHYSICAL MULT');
        draw_text(780,840,'FIRE MULT');
        draw_text(300,1080,'ICE MULT');
        draw_text(780,1080,'POISON MULT');
        
        draw_text(1080/2,1320,'MOUVEMENT SPEED');
        draw_text(300,1560,'WIND UP');
        draw_text(780,1560,'COOL DOWN');
        
        draw_set_colour(txt_col);
        if start_up=0
        {
            
                    draw_text(300,200,damage_1);
                    draw_text(780,200,damage_2);
                    draw_text(300,440,damage_type_text_array[damage_type_1]);
                    draw_text(780,440,damage_type_text_array[damage_type_2]);
                    
                    draw_text(300,680,string(slash_resistence)+"X D TAKEN");
                    draw_text(780,680,string(pierce_resistence)+"X D TAKEN");
                    draw_text(300,920,string(push_resistance)+"X D TAKEN");
                    draw_text(780,920,string(fire_resistance)+"X D TAKEN");
                    draw_text(300,1160,string(ice_resistance)+"X D TAKEN");
                    draw_text(780,1160,string(poison_resistance)+"X D TAKEN"); 
                    
                    draw_text(1080/2,1400,string(mouvement_speed) +" spaces");
                    draw_text(300,1640,string(wind_up)+" turns");
                    draw_text(780,1640,string(wind_down)+" turns"); 
            }
    }
    else
    {
        draw_text(1080/2,840,'DEFLECT THE CANNONBALLS');
        draw_text(540,920,"TO SAVE YOURSELF FROM THUNDER"); 
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
