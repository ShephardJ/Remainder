<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scr_point</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=13;
image_yscale=image_xscale;
image_speed=0;

start_up=1;

using=0;
destroy=0;
type=-1;
used=-1;
burned=0;
point_n=-1;
current_point=0;

grey_l=make_colour_rgb(244,244,244);
brown_l=make_colour_rgb(181,103,26);
yellow_l=make_colour_rgb(179,179,30);
red_l=make_colour_rgb(179,0,0);
blue_l=make_colour_rgb(27,179,179);
bronze_l=make_colour_rgb(217,108,35);
green_l=make_colour_rgb(30,179,30);

run_script=1
color_var=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,obj_player) current_point=1;
else current_point=0;
if using=1 
{
    if (obj_world.current_player_state=player_world_state.transition||obj_world.current_player_state=player_world_state.turn)&amp;&amp;used=0 
    {
        used=1;
        global.point_array[point_n,2]=used;
        start_up=1;
        using=0;
    }
}
if destroy=1 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if type&gt;-1&amp;&amp; start_up=1
{
    if used=-1 used=global.point_array[point_n,2];
    if type=0 color_var=6;
    if type=1 color_var=5;
    if type=2 color_var=4;
    if used=1 color_var=3;
    scr_color_blend();
    start_up=0;
}
if point_n&gt;-1 &amp;&amp; current_point=1
{
    var link1=global.point_array[point_n,6];
    if link1&gt;-1/*&amp;&amp;link1&gt;point_n*/
    {
        
        
        var link1_x=global.point_array[link1,7]*7.8
        var link1_y=/*global.point_array[link1,8]*7.8+y+50*7.8*(global.point_array[link1,9]-global.point_array[point_n,9]);*/ 
        y-(global.point_array[point_n,8]*7.8)+50*7.8*(global.point_array[link1,9]-global.point_array[point_n,9])+global.point_array[link1,8]*7.8;
    }
    
    var link2=global.point_array[point_n,5];
    if link2&gt;-1/*&amp;&amp;link2&gt;point_n*/
    {
        var link2_x=global.point_array[link2,7]*7.8
        var link2_y=/*global.point_array[link2,8]*7.8+y+50*7.8*(global.point_array[link2,9]-global.point_array[point_n,9]);*/
        y-(global.point_array[point_n,8]*7.8)+50*7.8*(global.point_array[link2,9]-global.point_array[point_n,9])+global.point_array[link2,8]*7.8;
    }
    var link3=global.point_array[point_n,4];
    if link3&gt;-1/*&amp;&amp;link3&gt;point_n*/
    {
        var link3_x=global.point_array[link3,7]*7.8
        var link3_y=/*global.point_array[link3,8]*7.8+y+50*7.8*(global.point_array[link3,9]-global.point_array[point_n,9]);*/
        y-(global.point_array[point_n,8]*7.8)+50*7.8*(global.point_array[link3,9]-global.point_array[point_n,9])+global.point_array[link3,8]*7.8;
    }
    var link4=global.point_array[point_n,3];
    if link4&gt;-1/*&amp;&amp;link4&gt;point_n*/
    {
        var link4_x=global.point_array[link4,7]*7.8
        var link4_y=/*global.point_array[link4,8]*7.8+y+50*7.8*(global.point_array[link4,9]-global.point_array[point_n,9]);*/
        y-(global.point_array[point_n,8]*7.8)+50*7.8*(global.point_array[link4,9]-global.point_array[point_n,9])+global.point_array[link4,8]*7.8;
    }
    if link1&gt;-1&amp;&amp;global.point_array[link1,9]&gt;=obj_world.burn_tile /*&amp;&amp; link1&gt;point_n*/ draw_line_width(x,y,link1_x,link1_y,13);
    if link2&gt;-1&amp;&amp;global.point_array[link2,9]&gt;=obj_world.burn_tile /*&amp;&amp; link2&gt;point_n*/ draw_line_width(x,y,link2_x,link2_y,13);
    if link3&gt;-1&amp;&amp;global.point_array[link3,9]&gt;=obj_world.burn_tile /*&amp;&amp; link3&gt;point_n*/ draw_line_width(x,y,link3_x,link3_y,13);
    if link4&gt;-1&amp;&amp;global.point_array[link4,9]&gt;=obj_world.burn_tile /*&amp;&amp; link4&gt;point_n*/ draw_line_width(x,y,link4_x,link4_y,13);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
