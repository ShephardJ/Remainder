<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_airship_crew</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wait_for_reposition+=1;

current_player_wait_wait_array=-5;

shield=-1;

state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth+=1;
hp=5
init_hp=5
varient=-1
att_fx=0;
//setting varient
start_up=1;

//reposition variable
range_check=1;
initial_range_array=0;
current_range_array=0;

//taking damage var
hit=0;
damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;
waiting=0;
pushed=0;
image_speed=1/25;

//turn vars
mouvement_banked=0;
moved=0;
attack_bank=0;
attacking=0;
winding_down=0;
esthetic_wait=3;
moved_back=0;

//crew vars
down=0;
upping=0;
upped=0;
up_count=0;
destroy=0;
wait_wait_gate=0;
reseting=0;

alive=0;
infected=0;


shield_slash_resistence=0.5;
shield_pierce_resistence=0.5;
shield_fire_resistance=0.75;
shield_ice_resistance=0.75;
shield_poison_resistance=0;
shield_push_resistance=0.5;

if instance_exists(obj_airship) 
{
    on=0;
    global.enemie_total+=1;
}
else
{
    on=0;
}

var parts=3
do
{
    parts-=1;
    skeleton_id[parts]=0;
}
until parts=0;

audio_hit_player=snd_skeleton_hit_player;
if (!audio_group_is_loaded(skeleton_audio))audio_group_load(skeleton_audio);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if varient=0 global.gold+=20;
if varient=1 global.gold+=10;
if varient=2 global.gold+=10;

if room=fight_room
{
    var adjust=1
    if global.info_array[global.current_world,10]="DRY SEASON"||global.info_array[global.current_world,11]="DRY SEASON" adjust+=1/6;
    if global.info_array[global.current_world,10]="WET SEASON"||global.info_array[global.current_world,11]="WET SEASON" adjust-=1/6;
    if global.info_array[global.current_world,10]="EQUALITY"||global.info_array[global.current_world,11]="EQUALITY" adjust-=1/6;
    if global.info_array[global.current_world,10]="INEQUALITY"||global.info_array[global.current_world,11]="INEQUALITY" adjust+=1/6;
    if varient=0 global.gold+=round(20*((8-global.difficult)/8)*adjust);
    if varient=1 global.gold+=round(10*((8-global.difficult)/8)*adjust);
    if varient=2 global.gold+=round(10*((8-global.difficult)/8)*adjust);
   
    if varient=0  global.gold_accumulated+=round(20*((8-global.difficult)/8)*adjust);
    if varient=1  global.gold_accumulated+=round(10*((8-global.difficult)/8)*adjust);
    if varient=2  global.gold_accumulated+=round(10*((8-global.difficult)/8)*adjust);
}
if room=arcade_mode
{
    if varient=0 global.gold+=round(20*((8-global.difficult)/8));
    if varient=1 global.gold+=round(10*((8-global.difficult)/8));
    if varient=2 global.gold+=round(10*((8-global.difficult)/8));
    
    if varient=0  global.gold_accumulated+=round(20*((8-global.difficult)/8));
    if varient=1  global.gold_accumulated+=round(10*((8-global.difficult)/8));
    if varient=2  global.gold_accumulated+=round(10*((8-global.difficult)/8));
}
state_visual.destroy=1;
obj_overlay_test.range_array[current_range_array]=0;
obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
anim=instance_create(x,y,obj_airship_crew_death);
if (varient=0) 
{
    anim.sprite_index=spr_skeleton_pirate_captain_death;
    var potions=global.player_potion-global.player_potion_current;
    if potions&gt;0
    {
        if potions=1 {instance_create(x+(sprite_width/2),y+(sprite_height/2),obj_potion_ball_main)}
        if potions&gt;1
        {
            instance_create(x+(sprite_width/2),y+(sprite_height/2),obj_potion_ball_main);
            instance_create(x+(sprite_width/2),y+(sprite_height/2),obj_potion_ball_main);
        }
    }
}
if (varient=1) anim.sprite_index=spr_skeleton_pirate_red_death;
if (varient=2) anim.sprite_index=spr_skeleton_pirate_blue_death;


if shield&gt;-1 shield.destroy=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn

//wait_wait_array
if(current_player_wait_wait_array=global.enemy_countdown)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;(global.player_wait_wait=1)&amp;&amp;(on=1)&amp;&amp;(down=0)&amp;&amp;(wait_wait_gate=0)
{
    //start of enemy turn
    if(global.enemy_acting=0)
    {
        scr_enemy_turn_start_up_2();
    }
    
    //do something
    if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)
    {
        if varient=0 scr_airship_crew_captain();
        if varient=1 scr_airship_crew_red();
        if varient=2 scr_airship_crew_blue();
        esthetic_wait=3;
    }
    //''thinking time''
    if(esthetic_wait&gt;=0)esthetic_wait-=1;
    
}


if(current_range_array=global.enemy_countdown)&amp;&amp;(global.player_wait_wait=0)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;(on=1)&amp;&amp;(down=0)&amp;&amp;(upping=0)
{
    //start of enemy turn
    if(global.enemy_acting=0)
    {
        scr_enemy_turn_start_up();
    }
    
    //do something
    if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)
    {
        if varient=0 scr_airship_crew_captain_main();
        else scr_determine_action();
        esthetic_wait=3;
    }
    //''thinking time''
    if(esthetic_wait&gt;=0)esthetic_wait-=1;
    
}
if(global.enemy_turn=0)&amp;&amp;(moved_back=1)moved_back=0;
if global.enemy_turn=0{global.player_wait_wait=1;upping=0;wait_wait_gate=0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset
if reseting=1&amp;&amp;y=512
{
        obj_overlay_test.range_array[current_range_array]=0;
        if varient=1 {current_range_array=10;mouvement_speed=2;range=1;}
        else current_range_array=1;
        obj_overlay_test.range_array[current_range_array]=range;
        reseting=0;
        global.wait_for_reposition=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars 
if(start_up=1)&amp;&amp;(varient&gt;-1)
{
    scr_stats_skeleton_crew_stats();
    start_up=0;image_xscale=13;
    image_yscale=image_xscale;
    if varient&gt;0 obj_airship_crew.skeleton_id[varient]=id;
    scr_determin_player_wait_wait_array();
}


//keep variables going
hp=hp;
wind_up=wind_up;
range=range;
wind_down=wind_down;
mouvement_speed=mouvement_speed;
slash_resistence=slash_resistence;
pierce_resistence=pierce_resistence;
current_range_array=current_range_array;
image_xscale=13;
image_yscale=image_xscale;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///range_check
if(range_check=1)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition&gt;0)&amp;&amp;(on=1)

{
    current_range_array=scr_range_check(x,y,range);
    initial_range_array=current_range_array;
    range_check=0;
    global.wait_for_reposition-=1;
}

if(range_check=0)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition&lt;=0)&amp;&amp;(reseting=0)
{
    current_range_array=round(scr_range_check(x,y,range));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(global.attack_fx&gt;0)&amp;&amp;(waiting=0)&amp;&amp;down=0||(pushed=1)
{
    att_fx=global.attack_fx;
     if (attack_bank&gt;0)&amp;&amp;(varient=2)d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,shield_pierce_resistence,shield_slash_resistence,shield_fire_resistance,shield_ice_resistance,shield_poison_resistance,shield_push_resistance);
    else d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    waiting=1;
    hit=0;
    skeleton_hit_sound=audio_play_sound(snd_skeleton_hit,5,false);
    audio_sound_gain(skeleton_hit_sound,global.vol_fx*0.6,0);
    //damage reset
    damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;
}

//can be hit again if no attack fx on screen
if (global.attack_fx&lt;att_fx) {waiting=0;hit=0}

//destroy if hp&lt;0
if (hp&lt;=0) 

{
   if varient=0
   {
        audio_sound_gain(skeleton_hit_sound,0,0);
        skeleton_dead_sound=audio_play_sound(snd_skeleton_death,5,false);
        audio_sound_gain(skeleton_dead_sound,global.vol_fx*0.6,0);
        instance_destroy();
        skeleton_id[1].destroy=1;
        skeleton_id[2].destroy=1;
    }
    else
    {
        audio_sound_gain(skeleton_hit_sound,0,0);
        skeleton_dead_sound=audio_play_sound(snd_skeleton_death,5,false);
        audio_sound_gain(skeleton_dead_sound,global.vol_fx*0.6,0);
        down=1;
        hp=1;
        if varient=1 sprite_index=spr_skeleton_pirate_red_death;
        if varient=2 sprite_index=spr_skeleton_pirate_blue_death;
        image_index=0;
        image_speed=15/60;
        
    }
}
    


if down=0&amp;&amp;!(hp=1) image_speed=((1/25)*(hp/init_hp));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pushed
if (pushed=1)
{

    pushed=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.x=x;
state_visual.y=y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///down &amp;&amp; destroy

if down=1
{
    if (destroy=0)
    {
        if (image_index&gt;12)&amp;&amp;(upped=0)&amp;&amp;(image_speed&gt;0)
        {
            image_index=12;
            image_speed=0;
        }
        if (upped=1)
        {
            image_speed=-12/60;
            
        }
        if (image_speed&lt;0)&amp;&amp;(image_index&lt;2)
        {
            if varient=1 sprite_index=spr_skeleton_pirate_red;
            if varient=2 sprite_index=spr_skeleton_pirate_blue;
            down=0;
            hp=round(init_hp/2);
            upped=0;
        }
    }
    else
    {
        image_speed=15/60;
        if (image_index&gt;20) instance_destroy();
    }
}
else
{
    if (varient&gt;0)&amp;&amp;(destroy=1)instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shielded
if (attack_bank&gt;0)&amp;&amp;(varient=2)
{
    if (shield=-1)
    {
        shield=instance_create(x,y,obj_enemie_shielded);
        shield.depth=depth+2;
    }
    else
    {
        shield.x=x;
        shield.y=y;
    }
}
else
{
    if !(shield=-1)
    {
        shield.destroy=1;
        shield=-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
