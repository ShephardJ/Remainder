<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_horseman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual=instance_create(x,y,obj_enemie_state);
state_visual.depth+=1;
current_player_wait_wait_array=-5

att_fx=0;
//setting varient
start_up=1;

//reposition variable
range_check=1;
initial_range_array=0;
current_range_array=0;
image_speed=25/60
waiting=0;
hit=0;
pushed=0;

//turn vars
mouvement_banked=0;
moved=0;
attack_bank=0;
attacking=0;
winding_down=0;
esthetic_wait=3;
moved_back=0;

damage_taken_type_1=0;
damage_taken_1=0;
damage_taken_type_2=0;
damage_taken_2=0;

alive=1;
infected=0;

wait_lock_down=0;
//boss vars
varient=1

anim_state=0

summon_cap=4;
summon_bank=0;
summon_n=0;
summon_start_up=1;

attack_start_up=1;

move_back_start_up=1;

audio_hit_player=snd_litch_attack;
if (!audio_group_is_loaded(litch_audio))audio_group_load(litch_audio);
move_to_x=x;
move_to_y=y;
body_spawn_count=0;
body_spawn_cap=4;

moved=0
destroy=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_visual.destroy=1;
obj_overlay_test.range_array[current_range_array]=0;
if !current_player_wait_wait_array=-5 obj_overlay_test.player_wait_wait_array[current_player_wait_wait_array]=0;
obj_overlay_test.range_array[current_range_array]=0;
global.enemy_acting=0;
if varient=0 global.gold+=40
if varient=1 global.gold+=0
if varient=2 global.gold+=7
if varient=3 global.gold+=8
if varient=4 global.gold+=9
if varient=5 global.gold+=10
if audio_is_playing (snd_horseman_horse_galop ) audio_pause_sound(snd_horseman_horse_galop);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars
if(start_up=1)
{
    scr_stats_horseman();
    start_up=0;image_xscale=13;
    image_yscale=image_xscale;
}

hp=hp;
wind_up=wind_up;
range=range;
wind_down=wind_down;
mouvement_speed=mouvement_speed;
slash_resistence=slash_resistence;
pierce_resistence=pierce_resistence;
current_range_array=current_range_array;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///range_check
if(range_check=1)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition&gt;0)
{
    current_range_array=scr_range_check(x,y,range);
    initial_range_array=current_range_array;
    range_check=0;
    global.wait_for_reposition=0;
}
if(range_check=0)&amp;&amp;(start_up=0)&amp;&amp;(global.wait_for_reposition=0)&amp;&amp;moved=0&amp;&amp;!(current_player_wait_wait_array=global.enemy_countdown)
{
    current_range_array=scr_range_check(x,y,range);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
if (hit=1)&amp;&amp;(waiting=0)||(pushed=1)
{
    att_fx=global.attack_fx;
    d_taken=scr_enemy_take_damage(damage_taken_type_1,damage_taken_1,damage_taken_type_2,damage_taken_2,pierce_resistence,slash_resistence,fire_resistance,ice_resistance,poison_resistance,push_resistance);
    scr_show_damage(d_taken,damage_taken_type_1);
    waiting=1;
    if instance_exists(obj_weapon_thrust)
    {
        going_down=-1;
        scr_horseman_hit_tracking(0,1);
    }
    if instance_exists(obj_weapon_slash)
    {
        going_right=obj_weapon_slash.image_xscale;
        scr_horseman_hit_tracking(going_right,1);
    }
    hit=0;
    wizard_hit_sound=audio_play_sound(snd_litch_hit,5,false);
    audio_sound_gain(wizard_hit_sound,global.vol_fx*0.4,0);
    
    //damage reset
    
}

///////////////////////////////////////////////////////////////////////////////////////
//can be hit again if no attack fx on screen
if (global.attack_fx&lt;att_fx) {waiting=0;hit=0;damage_taken_type_1=0;damage_taken_1=0;amage_taken_type_2=0;damage_taken_2=0;}
///////////////////////////////////////////////////////////////////////////////////////
//destroy if hp&lt;0
if (hp&lt;=0) 
{
    audio_sound_gain(wizard_hit_sound,0,0);
    wizard_death_sound=audio_play_sound(snd_litch_death,5,false);
    audio_sound_gain(wizard_death_sound,global.vol_fx*0.4,0);
    instance_destroy();
}

if place_meeting(x,y-20,obj_horseman_head)||place_meeting(x,y-20,obj_shield_fx)||y&gt;1280||destroy=1 
{
    if place_meeting(x,y-20,obj_horseman_head)
    {
        global.attack_fx+=2;
        var hitting=instance_place(x,y-20,obj_horseman_head);
        hitting.hit=1;
        hitting.damage_taken_type_1=5   
        hitting.damage_taken_1=100
        hitting.damage_taken_type_2=0;
        hitting.damage_taken_2=0;
        
        var hitting=instance_create(x,y,obj_horseman_fall);
        hitting.type=0;
        global.enemie_attack_count+=1;
        
        var hitting=instance_create(x,y,obj_horseman_fall);
        hitting.type=1;
        global.enemie_attack_count+=1; 
        
        
    }
    if y&gt;1280
    {
        var att=instance_create(x,y,obj_enemie_attack);
            att.attack_type=0; 
            att.color_var_get=1; 
            att.damage_1=6;
            att.damage_type_1=1;
            att.damage_2=0;
            att.damage_type_2=2;
            att.audio_hit_player=audio_hit_player;
    }
    instance_destroy();
    global.enemy_acting=0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn
if(current_player_wait_wait_array=global.enemy_countdown)&amp;&amp;(global.enemy_turn=1)&amp;&amp;(moved_back=0)&amp;&amp;wait_lock_down=0
{
    //start of enemy turn
    if(global.enemy_acting=0)
    {
        scr_enemy_turn_start_up();
    }
    
    //do something
    if(global.enemy_acting=1)&amp;&amp;(esthetic_wait&lt;=0)
    {
        scr_horseman_body_action();
        esthetic_wait=3;
    }
    //''thinking time''
    if(esthetic_wait&gt;=0)esthetic_wait-=1;
    
}
if(global.enemy_turn=0){moved_back=0;wait_lock_down=0;attack_start_up=1;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pushed
if (pushed=1)
{

    pushed=0;
}
if global.enemy_turn=0 {move_to_x=x;move_to_y=y;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate
//neutral
if (anim_state=0)
{
    image_speed=((1/25)*(hp/init_hp));
    if !(sprite_index=spr_horseman)sprite_index=spr_horseman;
    if audio_is_playing (snd_horseman_horse_galop ) audio_pause_sound(snd_horseman_horse_galop);
}
//attack
if (anim_state=1)
{
    if (attack_start_up=1)
    {
        sprite_index=spr_horseman_buck;
        image_speed=8/60;
        attack_start_up=0;
    }
    if (sprite_index=spr_horseman_buck)&amp;&amp;(image_index&gt;13)
    {
        sprite_index=spr_horseman_run;
        galop_sound=audio_play_sound(snd_horseman_horse_galop,5,true)
        audio_sound_gain(galop_sound,global.vol_fx*0.6,0);
    }

    if (sprite_index=spr_horseman_run) image_speed=(12/60);
}
/*
//summon
if (anim_state=2)
{
    if (summon_start_up=1)&amp;&amp;(summon_bank=1)
    {
        sprite_index=spr_litch_transition_summon;
        image_speed=8/60;
        summon_start_up=0;
    }
    if (sprite_index=spr_litch_transition_summon)&amp;&amp;(image_index&gt;10)
    {
        sprite_index=spr_litch_summon;
    }

    if (sprite_index=spr_litch_summon) image_speed=(8/60)*summon_bank/summon_cap;
}
*/
state_visual.x=x;
state_visual.y=y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

//move
if sprite_index=spr_horseman_run
{
    if (abs(x-move_to_x)&gt;4)
    {
        x+=(move_to_x-x)/60;
    }
    else 
    {
        x=move_to_x;
    }

    if (abs(y-move_to_y)&gt;4)
    {
        y+=(move_to_y-y)/60;
    }
    else 
    {
        y=move_to_y;
    }
    if y=move_to_y&amp;&amp;x=move_to_x 
    {
        global.enemy_acting=0;
        moved_back=1;
        anim_state=0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
